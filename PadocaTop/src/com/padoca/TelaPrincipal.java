/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.padoca;

import java.awt.Color;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import javax.swing.JPanel;
import java.sql.Statement;
import java.sql.ResultSet;
import java.time.LocalDate;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.SwingUtilities;
/**
 *
 * @author maria.coregio
 */
public class TelaPrincipal extends javax.swing.JFrame {
    
    Boolean clicked = false;
    boolean b;
    

    /**
     * Creates new form TelaPrincipal
     */
    public TelaPrincipal() {
        initComponents();
        initMoving(this);
        tabs.setSelectedIndex(9);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genButtons = new javax.swing.ButtonGroup();
        padariaLogo = new javax.swing.JLabel();
        header = new javax.swing.JPanel();
        closeBtn = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        padariaHeader = new javax.swing.JLabel();
        tabs = new javax.swing.JTabbedPane();
        tabFunc = new javax.swing.JPanel();
        funcScroll = new javax.swing.JScrollPane();
        listaFunc = new javax.swing.JTable();
        pesquisaNomeFunc = new javax.swing.JTextField();
        pesquisaIdFunc = new javax.swing.JTextField();
        pesquisaSelectFunc = new javax.swing.JComboBox<>();
        funcID = new javax.swing.JLabel();
        funcNome = new javax.swing.JLabel();
        funcSelect = new javax.swing.JLabel();
        funcHeader = new javax.swing.JLabel();
        pesquisaBotaoFunc = new javax.swing.JButton();
        botaoAddFunc = new javax.swing.JButton();
        botaoDelFunc = new javax.swing.JButton();
        tabFuncCad = new javax.swing.JPanel();
        cadFuncHeader = new javax.swing.JLabel();
        nomeCadFunc = new javax.swing.JTextField();
        idadeCadFunc = new javax.swing.JTextField();
        nomeLabel = new javax.swing.JLabel();
        idadeLabel = new javax.swing.JLabel();
        sexoLabel = new javax.swing.JLabel();
        femButton = new javax.swing.JRadioButton();
        mascButton = new javax.swing.JRadioButton();
        outroButton = new javax.swing.JRadioButton();
        cargoLabel = new javax.swing.JLabel();
        salarioLabel = new javax.swing.JLabel();
        salarioCadFunc = new javax.swing.JFormattedTextField();
        cpfLabel = new javax.swing.JLabel();
        cpfCadFunc = new javax.swing.JFormattedTextField();
        cadastrarCadFunc = new javax.swing.JButton();
        limparCadFunc = new javax.swing.JButton();
        voltarCadFunc = new javax.swing.JButton();
        dataAdmLabel = new javax.swing.JLabel();
        dataAdmCadFunc = new javax.swing.JFormattedTextField();
        cadFuncLabel = new javax.swing.JLabel();
        telLabelFunc = new javax.swing.JLabel();
        telCadFunc = new javax.swing.JTextField();
        emailLabelFunc = new javax.swing.JLabel();
        emailCadFunc = new javax.swing.JTextField();
        cargoCadFunc = new javax.swing.JTextField();
        tabProd = new javax.swing.JPanel();
        prodHeader = new javax.swing.JLabel();
        prodScroll = new javax.swing.JScrollPane();
        listaProd = new javax.swing.JTable();
        botaoAddProd = new javax.swing.JButton();
        botaoDelProd = new javax.swing.JButton();
        prodSelect = new javax.swing.JLabel();
        pesquisaSelectProd = new javax.swing.JComboBox<>();
        prodNome = new javax.swing.JLabel();
        pesquisaNomeProd = new javax.swing.JTextField();
        prodID = new javax.swing.JLabel();
        pesquisaIdProd = new javax.swing.JTextField();
        pesquisaBotaoProd = new javax.swing.JButton();
        tabProdCad = new javax.swing.JPanel();
        prodCadHeader = new javax.swing.JLabel();
        nomeCadProd = new javax.swing.JTextField();
        nomeLabelProd = new javax.swing.JLabel();
        cadastrarCadProd = new javax.swing.JButton();
        limparCadProd = new javax.swing.JButton();
        voltarCadProd = new javax.swing.JButton();
        tipoLabelProd = new javax.swing.JLabel();
        fornLabel = new javax.swing.JLabel();
        fornCadProd = new javax.swing.JComboBox<>();
        precoLabelProd = new javax.swing.JLabel();
        precoCadProd = new javax.swing.JFormattedTextField();
        valLabel = new javax.swing.JLabel();
        quantLabel = new javax.swing.JLabel();
        quantCadProd = new javax.swing.JTextField();
        valCadProd = new javax.swing.JFormattedTextField();
        cadProdLabel = new javax.swing.JLabel();
        tipoCadProd = new javax.swing.JTextField();
        tabForn = new javax.swing.JPanel();
        fornScroll = new javax.swing.JScrollPane();
        listaForn = new javax.swing.JTable();
        pesquisaNomeForn = new javax.swing.JTextField();
        pesquisaIdForn = new javax.swing.JTextField();
        pesquisaSelectForn = new javax.swing.JComboBox<>();
        fornID = new javax.swing.JLabel();
        fornNome = new javax.swing.JLabel();
        fornSelect = new javax.swing.JLabel();
        fornHeader = new javax.swing.JLabel();
        pesquisaBotaoForn = new javax.swing.JButton();
        botaoAddForn = new javax.swing.JButton();
        botaoDelForn = new javax.swing.JButton();
        tabFornCad = new javax.swing.JPanel();
        fornCadHeader = new javax.swing.JLabel();
        nomeCadForn = new javax.swing.JTextField();
        nomeLabelCadForn = new javax.swing.JLabel();
        cadastrarCadForn = new javax.swing.JButton();
        limparCadForn = new javax.swing.JButton();
        voltarCadForn = new javax.swing.JButton();
        tipoLabelCadForn = new javax.swing.JLabel();
        tipoCadForn = new javax.swing.JTextField();
        statusLabelCadForn = new javax.swing.JLabel();
        sttsCadForn = new javax.swing.JTextField();
        cadFornLabel = new javax.swing.JLabel();
        telFornLabel = new javax.swing.JLabel();
        emailFornLabel = new javax.swing.JLabel();
        telCadForn = new javax.swing.JTextField();
        emailCadForn = new javax.swing.JTextField();
        tabIngre = new javax.swing.JPanel();
        IngreHeader = new javax.swing.JLabel();
        IngreScroll = new javax.swing.JScrollPane();
        listaIngre = new javax.swing.JTable();
        botaoAddIngre = new javax.swing.JButton();
        botaoDelIngre = new javax.swing.JButton();
        IngreSelect = new javax.swing.JLabel();
        pesquisaSelectIngre = new javax.swing.JComboBox<>();
        IngreNome = new javax.swing.JLabel();
        pesquisaNomeIngre = new javax.swing.JTextField();
        IngreID = new javax.swing.JLabel();
        pesquisaIdIngre = new javax.swing.JTextField();
        pesquisaBotaoIngre = new javax.swing.JButton();
        tabIngreCad = new javax.swing.JPanel();
        IngreCadHeader = new javax.swing.JLabel();
        nomeCadIngre = new javax.swing.JTextField();
        nomeLabelCadIngre = new javax.swing.JLabel();
        cadastrarCadIngre = new javax.swing.JButton();
        limparCadIngre = new javax.swing.JButton();
        voltarCadIngre = new javax.swing.JButton();
        quantLabelCadIngre = new javax.swing.JLabel();
        fornLabelCadIngre = new javax.swing.JLabel();
        fornCadIngre = new javax.swing.JComboBox<>();
        precoUniLabelCadIngre = new javax.swing.JLabel();
        precoUniCadIngre = new javax.swing.JFormattedTextField();
        valLabelCadIngre = new javax.swing.JLabel();
        valCadIngre = new javax.swing.JFormattedTextField();
        cadIngreLabel = new javax.swing.JLabel();
        quantCadIngre = new javax.swing.JTextField();
        tabVenda = new javax.swing.JPanel();
        vendaCadHeader = new javax.swing.JLabel();
        prodVendaScroll = new javax.swing.JScrollPane();
        prodVendaList = new javax.swing.JTable();
        vendaScroll = new javax.swing.JScrollPane();
        vendaList = new javax.swing.JTable();
        vendProdLabel = new javax.swing.JLabel();
        vendaLabel = new javax.swing.JLabel();
        valorVendaCadLabel = new javax.swing.JLabel();
        funcVendaCadLabel = new javax.swing.JLabel();
        idProdVendaCadLabel = new javax.swing.JLabel();
        idProdVendaCad = new javax.swing.JTextField();
        funcVendaCad = new javax.swing.JComboBox<>();
        vendaCadButton = new javax.swing.JButton();
        vendaDelButton = new javax.swing.JButton();
        qntVendaCad = new javax.swing.JFormattedTextField();
        tabInicio = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        buttonPanel = new javax.swing.JPanel();
        panVendas = new javax.swing.JPanel();
        btnVendas = new javax.swing.JLabel();
        panProd = new javax.swing.JPanel();
        btnProd = new javax.swing.JLabel();
        panFunc = new javax.swing.JPanel();
        btnFunc = new javax.swing.JLabel();
        panForn = new javax.swing.JPanel();
        btnForn = new javax.swing.JLabel();
        panRemessa = new javax.swing.JPanel();
        btnIngredientes = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 204));
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 1146, 804));
        setName("telaPrincipal"); // NOI18N
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1146, 804));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        padariaLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/padoca/logo-padaria-ned.png"))); // NOI18N
        getContentPane().add(padariaLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 180, 160));

        header.setBackground(new java.awt.Color(249, 111, 93));
        header.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 225, 225), new java.awt.Color(122, 74, 74), null));
        header.setForeground(new java.awt.Color(255, 204, 204));
        header.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        closeBtn.setBackground(new java.awt.Color(249, 111, 93));
        closeBtn.setForeground(new java.awt.Color(249, 111, 93));
        closeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeBtnMouseExited(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("X");

        javax.swing.GroupLayout closeBtnLayout = new javax.swing.GroupLayout(closeBtn);
        closeBtn.setLayout(closeBtnLayout);
        closeBtnLayout.setHorizontalGroup(
            closeBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );
        closeBtnLayout.setVerticalGroup(
            closeBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, closeBtnLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        header.add(closeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 10, 50, 50));

        padariaHeader.setFont(new java.awt.Font("Garamond", 1, 64)); // NOI18N
        padariaHeader.setForeground(new java.awt.Color(255, 255, 255));
        padariaHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        padariaHeader.setText("Padaria N&D");
        header.add(padariaHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 900, 150));

        getContentPane().add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -10, 1160, 160));

        tabFunc.setBackground(new java.awt.Color(251, 242, 212));

        listaFunc = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        listaFunc.setForeground(new java.awt.Color(67, 40, 28));
        listaFunc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Sexo", "Cargo", "Telefone", "Idade", "E-Mail", "CPF", "Salário", "Data de Admissão"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listaFunc.setFocusable(false);
        listaFunc.setGridColor(new java.awt.Color(255, 255, 255));
        listaFunc.setSelectionBackground(new java.awt.Color(251, 132, 123));
        listaFunc.setShowGrid(false);
        listaFunc.getTableHeader().setResizingAllowed(false);
        listaFunc.getTableHeader().setReorderingAllowed(false);
        funcScroll.setViewportView(listaFunc);
        if (listaFunc.getColumnModel().getColumnCount() > 0) {
            listaFunc.getColumnModel().getColumn(0).setResizable(false);
            listaFunc.getColumnModel().getColumn(1).setResizable(false);
            listaFunc.getColumnModel().getColumn(2).setResizable(false);
            listaFunc.getColumnModel().getColumn(3).setResizable(false);
            listaFunc.getColumnModel().getColumn(4).setResizable(false);
            listaFunc.getColumnModel().getColumn(5).setResizable(false);
            listaFunc.getColumnModel().getColumn(6).setResizable(false);
            listaFunc.getColumnModel().getColumn(7).setResizable(false);
            listaFunc.getColumnModel().getColumn(8).setResizable(false);
            listaFunc.getColumnModel().getColumn(9).setResizable(false);
        }

        pesquisaNomeFunc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        pesquisaIdFunc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        pesquisaSelectFunc.setBackground(new java.awt.Color(248, 242, 208));
        pesquisaSelectFunc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pesquisaSelectFunc.setForeground(new java.awt.Color(67, 40, 28));
        pesquisaSelectFunc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Funcionários>" }));
        pesquisaSelectFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisaSelectFuncActionPerformed(evt);
            }
        });

        funcID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        funcID.setForeground(new java.awt.Color(67, 40, 28));
        funcID.setText("ID:");

        funcNome.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        funcNome.setForeground(new java.awt.Color(67, 40, 28));
        funcNome.setText("Nome:");

        funcSelect.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        funcSelect.setForeground(new java.awt.Color(67, 40, 28));
        funcSelect.setText("Funcionário:");

        funcHeader.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        funcHeader.setForeground(new java.awt.Color(67, 40, 28));
        funcHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        funcHeader.setText("Funcionários");

        pesquisaBotaoFunc.setBackground(new java.awt.Color(242, 214, 137));
        pesquisaBotaoFunc.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pesquisaBotaoFunc.setForeground(new java.awt.Color(192, 134, 47));
        pesquisaBotaoFunc.setText("Pesquisar");
        pesquisaBotaoFunc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pesquisaBotaoFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisaBotaoFuncActionPerformed(evt);
            }
        });

        botaoAddFunc.setBackground(new java.awt.Color(102, 255, 102));
        botaoAddFunc.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        botaoAddFunc.setForeground(new java.awt.Color(0, 153, 0));
        botaoAddFunc.setText("Adicionar");
        botaoAddFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAddFuncActionPerformed(evt);
            }
        });

        botaoDelFunc.setBackground(new java.awt.Color(255, 153, 153));
        botaoDelFunc.setFont(new java.awt.Font("Verdana", 3, 14)); // NOI18N
        botaoDelFunc.setForeground(new java.awt.Color(255, 51, 51));
        botaoDelFunc.setText("Excluir");
        botaoDelFunc.setPreferredSize(new java.awt.Dimension(105, 27));
        botaoDelFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDelFuncActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabFuncLayout = new javax.swing.GroupLayout(tabFunc);
        tabFunc.setLayout(tabFuncLayout);
        tabFuncLayout.setHorizontalGroup(
            tabFuncLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabFuncLayout.createSequentialGroup()
                .addGroup(tabFuncLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(tabFuncLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(funcScroll))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tabFuncLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(tabFuncLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(funcHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(tabFuncLayout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(tabFuncLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(funcNome)
                                    .addComponent(funcID)
                                    .addComponent(funcSelect))
                                .addGap(36, 36, 36)
                                .addGroup(tabFuncLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(pesquisaSelectFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pesquisaNomeFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(tabFuncLayout.createSequentialGroup()
                                        .addComponent(pesquisaIdFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pesquisaBotaoFunc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                                .addGroup(tabFuncLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(botaoAddFunc, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                                    .addComponent(botaoDelFunc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        tabFuncLayout.setVerticalGroup(
            tabFuncLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabFuncLayout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addComponent(funcHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(tabFuncLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pesquisaSelectFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(funcSelect)
                    .addComponent(botaoAddFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabFuncLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tabFuncLayout.createSequentialGroup()
                        .addGroup(tabFuncLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pesquisaNomeFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(funcNome))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(tabFuncLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(tabFuncLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(pesquisaIdFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(funcID))
                            .addComponent(pesquisaBotaoFunc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(botaoDelFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(funcScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        tabs.addTab("tab3", tabFunc);

        tabFuncCad.setBackground(new java.awt.Color(251, 242, 212));

        cadFuncHeader.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        cadFuncHeader.setForeground(new java.awt.Color(67, 40, 28));
        cadFuncHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cadFuncHeader.setText("Funcionários");

        nomeCadFunc.setPreferredSize(new java.awt.Dimension(7, 23));

        idadeCadFunc.setPreferredSize(new java.awt.Dimension(7, 23));

        nomeLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nomeLabel.setForeground(new java.awt.Color(67, 40, 28));
        nomeLabel.setText("Nome:");

        idadeLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        idadeLabel.setForeground(new java.awt.Color(67, 40, 28));
        idadeLabel.setText("Idade:");

        sexoLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sexoLabel.setForeground(new java.awt.Color(67, 40, 28));
        sexoLabel.setText("Sexo:");

        femButton.setBackground(new java.awt.Color(251, 242, 192));
        genButtons.add(femButton);
        femButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        femButton.setForeground(new java.awt.Color(67, 40, 28));
        femButton.setText("Feminino");

        mascButton.setBackground(new java.awt.Color(251, 242, 192));
        genButtons.add(mascButton);
        mascButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        mascButton.setForeground(new java.awt.Color(67, 40, 28));
        mascButton.setText("Masculino");

        outroButton.setBackground(new java.awt.Color(251, 242, 192));
        genButtons.add(outroButton);
        outroButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        outroButton.setForeground(new java.awt.Color(67, 40, 28));
        outroButton.setText("Outro");

        cargoLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cargoLabel.setForeground(new java.awt.Color(67, 40, 28));
        cargoLabel.setText("Cargo:");

        salarioLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        salarioLabel.setForeground(new java.awt.Color(67, 40, 28));
        salarioLabel.setText("Salário:");

        salarioCadFunc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("####.00"))));
        salarioCadFunc.setMinimumSize(new java.awt.Dimension(7, 23));
        salarioCadFunc.setName(""); // NOI18N
        salarioCadFunc.setPreferredSize(new java.awt.Dimension(7, 23));

        cpfLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cpfLabel.setForeground(new java.awt.Color(67, 40, 28));
        cpfLabel.setText("CPF:");

        cpfCadFunc.setPreferredSize(new java.awt.Dimension(7, 23));
        cpfCadFunc.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                cpfCadFuncCaretUpdate(evt);
            }
        });

        cadastrarCadFunc.setBackground(new java.awt.Color(102, 255, 102));
        cadastrarCadFunc.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        cadastrarCadFunc.setForeground(new java.awt.Color(0, 153, 0));
        cadastrarCadFunc.setText("Cadastrar");
        cadastrarCadFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarCadFuncActionPerformed(evt);
            }
        });

        limparCadFunc.setBackground(new java.awt.Color(242, 214, 137));
        limparCadFunc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        limparCadFunc.setForeground(new java.awt.Color(192, 134, 47));
        limparCadFunc.setText("Limpar");

        voltarCadFunc.setBackground(new java.awt.Color(242, 214, 137));
        voltarCadFunc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        voltarCadFunc.setForeground(new java.awt.Color(192, 134, 47));
        voltarCadFunc.setText("Voltar");
        voltarCadFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarCadFuncActionPerformed(evt);
            }
        });

        dataAdmLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        dataAdmLabel.setForeground(new java.awt.Color(67, 40, 28));
        dataAdmLabel.setText("Data de Admissão:");

        dataAdmCadFunc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));

        cadFuncLabel.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        cadFuncLabel.setForeground(new java.awt.Color(72, 57, 42));
        cadFuncLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cadFuncLabel.setText("Cadastro");

        telLabelFunc.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        telLabelFunc.setForeground(new java.awt.Color(67, 40, 28));
        telLabelFunc.setText("Telefone:");

        emailLabelFunc.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        emailLabelFunc.setForeground(new java.awt.Color(67, 40, 28));
        emailLabelFunc.setText("E-Mail:");

        javax.swing.GroupLayout tabFuncCadLayout = new javax.swing.GroupLayout(tabFuncCad);
        tabFuncCad.setLayout(tabFuncCadLayout);
        tabFuncCadLayout.setHorizontalGroup(
            tabFuncCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabFuncCadLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cadFuncLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(342, 342, 342))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabFuncCadLayout.createSequentialGroup()
                .addGroup(tabFuncCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabFuncCadLayout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(sexoLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabFuncCadLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(tabFuncCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(voltarCadFunc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idadeLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nomeLabel, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(18, 18, 18)
                .addGroup(tabFuncCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabFuncCadLayout.createSequentialGroup()
                        .addComponent(idadeCadFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(tabFuncCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cadastrarCadFunc, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                            .addComponent(limparCadFunc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(tabFuncCadLayout.createSequentialGroup()
                        .addComponent(nomeCadFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(103, 103, 103)
                        .addGroup(tabFuncCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabFuncCadLayout.createSequentialGroup()
                                .addComponent(telLabelFunc)
                                .addGap(18, 18, 18)
                                .addComponent(telCadFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tabFuncCadLayout.createSequentialGroup()
                                .addGroup(tabFuncCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(salarioLabel)
                                    .addComponent(cpfLabel))
                                .addGap(18, 18, 18)
                                .addGroup(tabFuncCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cpfCadFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(salarioCadFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(tabFuncCadLayout.createSequentialGroup()
                                .addComponent(dataAdmLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dataAdmCadFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(108, Short.MAX_VALUE))
            .addGroup(tabFuncCadLayout.createSequentialGroup()
                .addGroup(tabFuncCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabFuncCadLayout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addGroup(tabFuncCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabFuncCadLayout.createSequentialGroup()
                                .addComponent(emailLabelFunc)
                                .addGroup(tabFuncCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(tabFuncCadLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(femButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(mascButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(outroButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(tabFuncCadLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(emailCadFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(tabFuncCadLayout.createSequentialGroup()
                                .addComponent(cargoLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cargoCadFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(tabFuncCadLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(cadFuncHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 819, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tabFuncCadLayout.setVerticalGroup(
            tabFuncCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabFuncCadLayout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addComponent(cadFuncHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cadFuncLabel)
                .addGap(45, 45, 45)
                .addGroup(tabFuncCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeLabel)
                    .addComponent(nomeCadFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataAdmLabel)
                    .addComponent(dataAdmCadFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(tabFuncCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idadeLabel)
                    .addComponent(telLabelFunc)
                    .addComponent(idadeCadFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telCadFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(tabFuncCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sexoLabel)
                    .addGroup(tabFuncCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(salarioLabel)
                        .addComponent(salarioCadFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabFuncCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(outroButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mascButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(femButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(20, 20, 20)
                .addGroup(tabFuncCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tabFuncCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(emailCadFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cpfLabel)
                        .addComponent(cpfCadFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabFuncCadLayout.createSequentialGroup()
                        .addComponent(emailLabelFunc)
                        .addGap(3, 3, 3)))
                .addGap(18, 18, 18)
                .addGroup(tabFuncCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cargoCadFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cargoLabel))
                .addGap(106, 106, 106)
                .addComponent(cadastrarCadFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabFuncCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(voltarCadFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(limparCadFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        tabs.addTab("tab3", tabFuncCad);

        tabProd.setBackground(new java.awt.Color(251, 242, 212));

        prodHeader.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        prodHeader.setForeground(new java.awt.Color(67, 40, 28));
        prodHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        prodHeader.setText("Produtos");

        listaProd = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        listaProd.setForeground(new java.awt.Color(67, 40, 28));
        listaProd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Validade", "Preço", "Quant.", "Fornecedor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listaProd.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        listaProd.setFocusable(false);
        listaProd.setGridColor(new java.awt.Color(255, 255, 255));
        listaProd.setSelectionBackground(new java.awt.Color(251, 132, 123));
        listaProd.getTableHeader().setResizingAllowed(false);
        listaProd.getTableHeader().setReorderingAllowed(false);
        prodScroll.setViewportView(listaProd);
        if (listaProd.getColumnModel().getColumnCount() > 0) {
            listaProd.getColumnModel().getColumn(0).setResizable(false);
            listaProd.getColumnModel().getColumn(1).setResizable(false);
            listaProd.getColumnModel().getColumn(2).setResizable(false);
            listaProd.getColumnModel().getColumn(3).setResizable(false);
        }

        botaoAddProd.setBackground(new java.awt.Color(102, 255, 102));
        botaoAddProd.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        botaoAddProd.setForeground(new java.awt.Color(0, 153, 0));
        botaoAddProd.setText("Adicionar");
        botaoAddProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAddProdActionPerformed(evt);
            }
        });

        botaoDelProd.setBackground(new java.awt.Color(255, 153, 153));
        botaoDelProd.setFont(new java.awt.Font("Verdana", 3, 14)); // NOI18N
        botaoDelProd.setForeground(new java.awt.Color(255, 51, 51));
        botaoDelProd.setText("Excluir");
        botaoDelProd.setPreferredSize(new java.awt.Dimension(105, 27));

        prodSelect.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        prodSelect.setForeground(new java.awt.Color(67, 40, 28));
        prodSelect.setText("Produto:");

        pesquisaSelectProd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pesquisaSelectProd.setForeground(new java.awt.Color(67, 40, 28));
        pesquisaSelectProd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Produtos>" }));
        pesquisaSelectProd.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                pesquisaSelectProdCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        pesquisaSelectProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisaSelectProdActionPerformed(evt);
            }
        });

        prodNome.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        prodNome.setForeground(new java.awt.Color(67, 40, 28));
        prodNome.setText("Nome:");

        pesquisaNomeProd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        prodID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        prodID.setForeground(new java.awt.Color(67, 40, 28));
        prodID.setText("ID:");

        pesquisaIdProd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        pesquisaBotaoProd.setBackground(new java.awt.Color(242, 214, 137));
        pesquisaBotaoProd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pesquisaBotaoProd.setForeground(new java.awt.Color(192, 134, 47));
        pesquisaBotaoProd.setText("Pesquisar");
        pesquisaBotaoProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisaBotaoProdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabProdLayout = new javax.swing.GroupLayout(tabProd);
        tabProd.setLayout(tabProdLayout);
        tabProdLayout.setHorizontalGroup(
            tabProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabProdLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(tabProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prodHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 841, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(tabProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(tabProdLayout.createSequentialGroup()
                            .addGroup(tabProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(prodNome)
                                .addComponent(prodID)
                                .addComponent(prodSelect))
                            .addGap(36, 36, 36)
                            .addGroup(tabProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(pesquisaSelectProd, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(pesquisaNomeProd, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(tabProdLayout.createSequentialGroup()
                                    .addComponent(pesquisaIdProd, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(pesquisaBotaoProd, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(67, 67, 67)
                            .addGroup(tabProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(botaoAddProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(botaoDelProd, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(prodScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 832, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        tabProdLayout.setVerticalGroup(
            tabProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabProdLayout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(prodHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(tabProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabProdLayout.createSequentialGroup()
                        .addComponent(botaoAddProd, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(botaoDelProd, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabProdLayout.createSequentialGroup()
                        .addGroup(tabProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pesquisaSelectProd, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(prodSelect))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pesquisaNomeProd, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(prodNome))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(tabProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(tabProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(pesquisaIdProd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(prodID))
                            .addComponent(pesquisaBotaoProd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(prodScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        tabs.addTab("tab1", tabProd);

        tabProdCad.setBackground(new java.awt.Color(251, 242, 212));

        prodCadHeader.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        prodCadHeader.setForeground(new java.awt.Color(67, 40, 28));
        prodCadHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        prodCadHeader.setText("Produtos");

        nomeCadProd.setPreferredSize(new java.awt.Dimension(7, 23));

        nomeLabelProd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nomeLabelProd.setForeground(new java.awt.Color(67, 40, 28));
        nomeLabelProd.setText("Nome:");

        cadastrarCadProd.setBackground(new java.awt.Color(102, 255, 102));
        cadastrarCadProd.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        cadastrarCadProd.setForeground(new java.awt.Color(0, 153, 0));
        cadastrarCadProd.setText("Cadastrar");
        cadastrarCadProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarCadProdActionPerformed(evt);
            }
        });

        limparCadProd.setBackground(new java.awt.Color(242, 214, 137));
        limparCadProd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        limparCadProd.setForeground(new java.awt.Color(192, 134, 47));
        limparCadProd.setText("Limpar");
        limparCadProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparCadProdActionPerformed(evt);
            }
        });

        voltarCadProd.setBackground(new java.awt.Color(242, 214, 137));
        voltarCadProd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        voltarCadProd.setForeground(new java.awt.Color(192, 134, 47));
        voltarCadProd.setText("Voltar");
        voltarCadProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarCadProdActionPerformed(evt);
            }
        });

        tipoLabelProd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tipoLabelProd.setForeground(new java.awt.Color(67, 40, 28));
        tipoLabelProd.setText("Tipo:");

        fornLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        fornLabel.setForeground(new java.awt.Color(67, 40, 28));
        fornLabel.setText("Fornecedor:");

        fornCadProd.setBackground(new java.awt.Color(242, 214, 137));
        fornCadProd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        fornCadProd.setForeground(new java.awt.Color(67, 40, 28));
        fornCadProd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Fornecedores>" }));
        fornCadProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fornCadProdActionPerformed(evt);
            }
        });

        precoLabelProd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        precoLabelProd.setForeground(new java.awt.Color(67, 40, 28));
        precoLabelProd.setText("Preço:");

        valLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        valLabel.setForeground(new java.awt.Color(67, 40, 28));
        valLabel.setText("Validade:");

        quantLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        quantLabel.setForeground(new java.awt.Color(67, 40, 28));
        quantLabel.setText("Quantidade:");

        valCadProd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                valCadProdFocusLost(evt);
            }
        });

        cadProdLabel.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        cadProdLabel.setForeground(new java.awt.Color(72, 57, 42));
        cadProdLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cadProdLabel.setText("Cadastro");

        javax.swing.GroupLayout tabProdCadLayout = new javax.swing.GroupLayout(tabProdCad);
        tabProdCad.setLayout(tabProdCadLayout);
        tabProdCadLayout.setHorizontalGroup(
            tabProdCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabProdCadLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(tabProdCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(voltarCadProd, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(tabProdCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(fornLabel)
                        .addComponent(tipoLabelProd)
                        .addComponent(nomeLabelProd)
                        .addComponent(precoLabelProd)))
                .addGap(59, 59, 59)
                .addGroup(tabProdCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabProdCadLayout.createSequentialGroup()
                        .addComponent(precoCadProd, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(559, Short.MAX_VALUE))
                    .addGroup(tabProdCadLayout.createSequentialGroup()
                        .addGroup(tabProdCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(tabProdCadLayout.createSequentialGroup()
                                .addGroup(tabProdCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nomeCadProd, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fornCadProd, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tipoCadProd, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(tabProdCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(valLabel)
                                    .addComponent(quantLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(tabProdCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(valCadProd, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quantCadProd, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(tabProdCadLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(tabProdCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cadastrarCadProd, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                    .addComponent(limparCadProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(129, 129, 129))))
            .addGroup(tabProdCadLayout.createSequentialGroup()
                .addGroup(tabProdCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabProdCadLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(prodCadHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 819, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabProdCadLayout.createSequentialGroup()
                        .addGap(340, 340, 340)
                        .addComponent(cadProdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tabProdCadLayout.setVerticalGroup(
            tabProdCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabProdCadLayout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addComponent(prodCadHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cadProdLabel)
                .addGap(39, 39, 39)
                .addGroup(tabProdCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabProdCadLayout.createSequentialGroup()
                        .addGroup(tabProdCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabProdCadLayout.createSequentialGroup()
                                .addGroup(tabProdCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(quantLabel)
                                    .addComponent(quantCadProd, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(tabProdCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(valLabel)
                                    .addComponent(valCadProd, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(tabProdCadLayout.createSequentialGroup()
                                .addGroup(tabProdCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(nomeLabelProd)
                                    .addComponent(nomeCadProd, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addGroup(tabProdCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tipoLabelProd)
                                    .addComponent(tipoCadProd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addGroup(tabProdCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(precoLabelProd)
                            .addComponent(precoCadProd, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addComponent(fornLabel))
                    .addComponent(fornCadProd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(124, 124, 124)
                .addComponent(cadastrarCadProd, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabProdCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(voltarCadProd, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(tabProdCadLayout.createSequentialGroup()
                        .addComponent(limparCadProd, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                        .addContainerGap(100, Short.MAX_VALUE))))
        );

        tabs.addTab("tab3", tabProdCad);

        tabForn.setBackground(new java.awt.Color(251, 242, 212));

        listaForn = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        listaForn.setForeground(new java.awt.Color(67, 40, 28));
        listaForn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Tipo Forn.", "Status", "Telefone", "E-Mail"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listaForn.setFocusable(false);
        listaForn.setGridColor(new java.awt.Color(255, 255, 255));
        listaForn.setSelectionBackground(new java.awt.Color(251, 132, 123));
        listaForn.getTableHeader().setResizingAllowed(false);
        listaForn.getTableHeader().setReorderingAllowed(false);
        fornScroll.setViewportView(listaForn);
        if (listaForn.getColumnModel().getColumnCount() > 0) {
            listaForn.getColumnModel().getColumn(0).setResizable(false);
            listaForn.getColumnModel().getColumn(1).setResizable(false);
            listaForn.getColumnModel().getColumn(2).setResizable(false);
            listaForn.getColumnModel().getColumn(3).setResizable(false);
            listaForn.getColumnModel().getColumn(4).setResizable(false);
            listaForn.getColumnModel().getColumn(5).setResizable(false);
        }

        pesquisaNomeForn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        pesquisaIdForn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        pesquisaSelectForn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pesquisaSelectForn.setForeground(new java.awt.Color(67, 40, 28));
        pesquisaSelectForn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Fornecedores>" }));
        pesquisaSelectForn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisaSelectFornActionPerformed(evt);
            }
        });

        fornID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        fornID.setForeground(new java.awt.Color(67, 40, 28));
        fornID.setText("ID:");

        fornNome.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        fornNome.setForeground(new java.awt.Color(67, 40, 28));
        fornNome.setText("Nome:");

        fornSelect.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        fornSelect.setForeground(new java.awt.Color(67, 40, 28));
        fornSelect.setText("Fornecedor:");

        fornHeader.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        fornHeader.setForeground(new java.awt.Color(67, 40, 28));
        fornHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fornHeader.setText("Fornecedores");

        pesquisaBotaoForn.setBackground(new java.awt.Color(242, 214, 137));
        pesquisaBotaoForn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pesquisaBotaoForn.setForeground(new java.awt.Color(192, 134, 47));
        pesquisaBotaoForn.setText("Pesquisar");
        pesquisaBotaoForn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisaBotaoFornActionPerformed(evt);
            }
        });

        botaoAddForn.setBackground(new java.awt.Color(102, 255, 102));
        botaoAddForn.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        botaoAddForn.setForeground(new java.awt.Color(0, 153, 0));
        botaoAddForn.setText("Adicionar");
        botaoAddForn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAddFornActionPerformed(evt);
            }
        });

        botaoDelForn.setBackground(new java.awt.Color(255, 153, 153));
        botaoDelForn.setFont(new java.awt.Font("Verdana", 3, 14)); // NOI18N
        botaoDelForn.setForeground(new java.awt.Color(255, 51, 51));
        botaoDelForn.setText("Excluir");
        botaoDelForn.setPreferredSize(new java.awt.Dimension(105, 27));

        javax.swing.GroupLayout tabFornLayout = new javax.swing.GroupLayout(tabForn);
        tabForn.setLayout(tabFornLayout);
        tabFornLayout.setHorizontalGroup(
            tabFornLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabFornLayout.createSequentialGroup()
                .addGroup(tabFornLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(tabFornLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(fornScroll))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tabFornLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(tabFornLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fornHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(tabFornLayout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(tabFornLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fornNome)
                                    .addComponent(fornID)
                                    .addComponent(fornSelect))
                                .addGap(36, 36, 36)
                                .addGroup(tabFornLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(pesquisaSelectForn, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pesquisaNomeForn, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(tabFornLayout.createSequentialGroup()
                                        .addComponent(pesquisaIdForn, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pesquisaBotaoForn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                                .addGroup(tabFornLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(botaoAddForn, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                                    .addComponent(botaoDelForn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        tabFornLayout.setVerticalGroup(
            tabFornLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabFornLayout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addComponent(fornHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(tabFornLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pesquisaSelectForn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fornSelect)
                    .addComponent(botaoAddForn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabFornLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tabFornLayout.createSequentialGroup()
                        .addGroup(tabFornLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pesquisaNomeForn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fornNome))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(tabFornLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(tabFornLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(pesquisaIdForn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(fornID))
                            .addComponent(pesquisaBotaoForn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(botaoDelForn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(fornScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        tabs.addTab("tab3", tabForn);

        tabFornCad.setBackground(new java.awt.Color(251, 242, 212));

        fornCadHeader.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        fornCadHeader.setForeground(new java.awt.Color(67, 40, 28));
        fornCadHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fornCadHeader.setText("Fornecedor");

        nomeCadForn.setPreferredSize(new java.awt.Dimension(7, 23));

        nomeLabelCadForn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nomeLabelCadForn.setForeground(new java.awt.Color(67, 40, 28));
        nomeLabelCadForn.setText("Nome:");

        cadastrarCadForn.setBackground(new java.awt.Color(102, 255, 102));
        cadastrarCadForn.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        cadastrarCadForn.setForeground(new java.awt.Color(0, 153, 0));
        cadastrarCadForn.setText("Cadastrar");
        cadastrarCadForn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarCadFornActionPerformed(evt);
            }
        });

        limparCadForn.setBackground(new java.awt.Color(242, 214, 137));
        limparCadForn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        limparCadForn.setForeground(new java.awt.Color(192, 134, 47));
        limparCadForn.setText("Limpar");

        voltarCadForn.setBackground(new java.awt.Color(242, 214, 137));
        voltarCadForn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        voltarCadForn.setForeground(new java.awt.Color(192, 134, 47));
        voltarCadForn.setText("Voltar");
        voltarCadForn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarCadFornActionPerformed(evt);
            }
        });

        tipoLabelCadForn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tipoLabelCadForn.setForeground(new java.awt.Color(67, 40, 28));
        tipoLabelCadForn.setText("Tipo de Fornecedor:");

        statusLabelCadForn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        statusLabelCadForn.setForeground(new java.awt.Color(67, 40, 28));
        statusLabelCadForn.setText("Status:");

        cadFornLabel.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        cadFornLabel.setForeground(new java.awt.Color(72, 57, 42));
        cadFornLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cadFornLabel.setText("Cadastro");

        telFornLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        telFornLabel.setForeground(new java.awt.Color(67, 40, 28));
        telFornLabel.setText("Telefone:");

        emailFornLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        emailFornLabel.setForeground(new java.awt.Color(67, 40, 28));
        emailFornLabel.setText("E-Mail:");

        javax.swing.GroupLayout tabFornCadLayout = new javax.swing.GroupLayout(tabFornCad);
        tabFornCad.setLayout(tabFornCadLayout);
        tabFornCadLayout.setHorizontalGroup(
            tabFornCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabFornCadLayout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(voltarCadForn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 492, Short.MAX_VALUE)
                .addGroup(tabFornCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(cadastrarCadForn, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                    .addComponent(limparCadForn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(129, 129, 129))
            .addGroup(tabFornCadLayout.createSequentialGroup()
                .addGroup(tabFornCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabFornCadLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(fornCadHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 819, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabFornCadLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addGroup(tabFornCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(statusLabelCadForn)
                            .addGroup(tabFornCadLayout.createSequentialGroup()
                                .addGroup(tabFornCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(tabFornCadLayout.createSequentialGroup()
                                        .addComponent(nomeLabelCadForn)
                                        .addGap(130, 130, 130)
                                        .addGroup(tabFornCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(sttsCadForn)
                                            .addComponent(tipoCadForn)
                                            .addComponent(nomeCadForn, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(tipoLabelCadForn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(tabFornCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(tabFornCadLayout.createSequentialGroup()
                                        .addComponent(telFornLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(telCadForn, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(tabFornCadLayout.createSequentialGroup()
                                        .addComponent(emailFornLabel)
                                        .addGap(30, 30, 30)
                                        .addComponent(emailCadForn, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(tabFornCadLayout.createSequentialGroup()
                        .addGap(338, 338, 338)
                        .addComponent(cadFornLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tabFornCadLayout.setVerticalGroup(
            tabFornCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabFornCadLayout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addComponent(fornCadHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cadFornLabel)
                .addGap(68, 68, 68)
                .addGroup(tabFornCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeLabelCadForn)
                    .addComponent(nomeCadForn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telFornLabel)
                    .addComponent(telCadForn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(tabFornCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipoLabelCadForn)
                    .addComponent(tipoCadForn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailFornLabel)
                    .addComponent(emailCadForn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(tabFornCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusLabelCadForn)
                    .addComponent(sttsCadForn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                .addComponent(cadastrarCadForn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabFornCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(voltarCadForn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(tabFornCadLayout.createSequentialGroup()
                        .addComponent(limparCadForn, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                        .addContainerGap(100, Short.MAX_VALUE))))
        );

        tabs.addTab("tab3", tabFornCad);

        tabIngre.setBackground(new java.awt.Color(251, 242, 212));

        IngreHeader.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        IngreHeader.setForeground(new java.awt.Color(67, 40, 28));
        IngreHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        IngreHeader.setText("Ingredientes");

        listaIngre = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        listaIngre.setForeground(new java.awt.Color(67, 40, 28));
        listaIngre.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Validade", "Preço", "Quant.", "Fornecedor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listaIngre.setFocusable(false);
        listaIngre.setGridColor(new java.awt.Color(255, 255, 255));
        listaIngre.setSelectionBackground(new java.awt.Color(251, 132, 123));
        listaIngre.getTableHeader().setResizingAllowed(false);
        listaIngre.getTableHeader().setReorderingAllowed(false);
        IngreScroll.setViewportView(listaIngre);
        if (listaIngre.getColumnModel().getColumnCount() > 0) {
            listaIngre.getColumnModel().getColumn(0).setResizable(false);
            listaIngre.getColumnModel().getColumn(1).setResizable(false);
            listaIngre.getColumnModel().getColumn(2).setResizable(false);
            listaIngre.getColumnModel().getColumn(3).setResizable(false);
            listaIngre.getColumnModel().getColumn(4).setResizable(false);
            listaIngre.getColumnModel().getColumn(5).setResizable(false);
        }

        botaoAddIngre.setBackground(new java.awt.Color(102, 255, 102));
        botaoAddIngre.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        botaoAddIngre.setForeground(new java.awt.Color(0, 153, 0));
        botaoAddIngre.setText("Adicionar");
        botaoAddIngre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAddIngreActionPerformed(evt);
            }
        });

        botaoDelIngre.setBackground(new java.awt.Color(255, 153, 153));
        botaoDelIngre.setFont(new java.awt.Font("Verdana", 3, 14)); // NOI18N
        botaoDelIngre.setForeground(new java.awt.Color(255, 51, 51));
        botaoDelIngre.setText("Excluir");
        botaoDelIngre.setPreferredSize(new java.awt.Dimension(105, 27));

        IngreSelect.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        IngreSelect.setForeground(new java.awt.Color(67, 40, 28));
        IngreSelect.setText("Tipo de Produto:");

        pesquisaSelectIngre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pesquisaSelectIngre.setForeground(new java.awt.Color(67, 40, 28));
        pesquisaSelectIngre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Ingredientes>" }));
        pesquisaSelectIngre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisaSelectIngreActionPerformed(evt);
            }
        });

        IngreNome.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        IngreNome.setForeground(new java.awt.Color(67, 40, 28));
        IngreNome.setText("Nome:");

        pesquisaNomeIngre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        IngreID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        IngreID.setForeground(new java.awt.Color(67, 40, 28));
        IngreID.setText("ID:");

        pesquisaIdIngre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        pesquisaBotaoIngre.setBackground(new java.awt.Color(242, 214, 137));
        pesquisaBotaoIngre.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pesquisaBotaoIngre.setForeground(new java.awt.Color(192, 134, 47));
        pesquisaBotaoIngre.setText("Pesquisar");
        pesquisaBotaoIngre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisaBotaoIngreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabIngreLayout = new javax.swing.GroupLayout(tabIngre);
        tabIngre.setLayout(tabIngreLayout);
        tabIngreLayout.setHorizontalGroup(
            tabIngreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabIngreLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(tabIngreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IngreHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 841, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(tabIngreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(tabIngreLayout.createSequentialGroup()
                            .addGroup(tabIngreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(IngreNome)
                                .addComponent(IngreID)
                                .addComponent(IngreSelect))
                            .addGap(36, 36, 36)
                            .addGroup(tabIngreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(pesquisaSelectIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(pesquisaNomeIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(tabIngreLayout.createSequentialGroup()
                                    .addComponent(pesquisaIdIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(pesquisaBotaoIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(67, 67, 67)
                            .addGroup(tabIngreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(botaoAddIngre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(botaoDelIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(IngreScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 832, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        tabIngreLayout.setVerticalGroup(
            tabIngreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabIngreLayout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(IngreHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(tabIngreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabIngreLayout.createSequentialGroup()
                        .addComponent(botaoAddIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(botaoDelIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabIngreLayout.createSequentialGroup()
                        .addGroup(tabIngreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pesquisaSelectIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IngreSelect))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabIngreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pesquisaNomeIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IngreNome))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(tabIngreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(tabIngreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(pesquisaIdIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(IngreID))
                            .addComponent(pesquisaBotaoIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IngreScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        tabs.addTab("tab1", tabIngre);

        tabIngreCad.setBackground(new java.awt.Color(251, 242, 212));

        IngreCadHeader.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        IngreCadHeader.setForeground(new java.awt.Color(67, 40, 28));
        IngreCadHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        IngreCadHeader.setText("Ingredientes");

        nomeCadIngre.setPreferredSize(new java.awt.Dimension(7, 23));

        nomeLabelCadIngre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nomeLabelCadIngre.setForeground(new java.awt.Color(67, 40, 28));
        nomeLabelCadIngre.setText("Nome do produto:");

        cadastrarCadIngre.setBackground(new java.awt.Color(102, 255, 102));
        cadastrarCadIngre.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        cadastrarCadIngre.setForeground(new java.awt.Color(0, 153, 0));
        cadastrarCadIngre.setText("Cadastrar");
        cadastrarCadIngre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarCadIngreActionPerformed(evt);
            }
        });

        limparCadIngre.setBackground(new java.awt.Color(242, 214, 137));
        limparCadIngre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        limparCadIngre.setForeground(new java.awt.Color(192, 134, 47));
        limparCadIngre.setText("Limpar");
        limparCadIngre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparCadIngreActionPerformed(evt);
            }
        });

        voltarCadIngre.setBackground(new java.awt.Color(242, 214, 137));
        voltarCadIngre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        voltarCadIngre.setForeground(new java.awt.Color(192, 134, 47));
        voltarCadIngre.setText("Voltar");
        voltarCadIngre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarCadIngreActionPerformed(evt);
            }
        });

        quantLabelCadIngre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        quantLabelCadIngre.setForeground(new java.awt.Color(67, 40, 28));
        quantLabelCadIngre.setText("Quantidade:");

        fornLabelCadIngre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        fornLabelCadIngre.setForeground(new java.awt.Color(67, 40, 28));
        fornLabelCadIngre.setText("Fornecedor:");

        fornCadIngre.setBackground(new java.awt.Color(242, 214, 137));
        fornCadIngre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        fornCadIngre.setForeground(new java.awt.Color(67, 40, 28));
        fornCadIngre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Fornecedores>" }));

        precoUniLabelCadIngre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        precoUniLabelCadIngre.setForeground(new java.awt.Color(67, 40, 28));
        precoUniLabelCadIngre.setText("Preço Unitário:");

        precoUniCadIngre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precoUniCadIngreActionPerformed(evt);
            }
        });

        valLabelCadIngre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        valLabelCadIngre.setForeground(new java.awt.Color(67, 40, 28));
        valLabelCadIngre.setText("Validade:");

        cadIngreLabel.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        cadIngreLabel.setForeground(new java.awt.Color(72, 57, 42));
        cadIngreLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cadIngreLabel.setText("Cadastro");

        javax.swing.GroupLayout tabIngreCadLayout = new javax.swing.GroupLayout(tabIngreCad);
        tabIngreCad.setLayout(tabIngreCadLayout);
        tabIngreCadLayout.setHorizontalGroup(
            tabIngreCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabIngreCadLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(tabIngreCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabIngreCadLayout.createSequentialGroup()
                        .addComponent(fornLabelCadIngre)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(tabIngreCadLayout.createSequentialGroup()
                        .addGroup(tabIngreCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabIngreCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(voltarCadIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(tabIngreCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quantLabelCadIngre)
                                    .addComponent(nomeLabelCadIngre)
                                    .addComponent(precoUniLabelCadIngre)))
                            .addComponent(valLabelCadIngre))
                        .addGroup(tabIngreCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabIngreCadLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(tabIngreCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cadastrarCadIngre, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                    .addComponent(limparCadIngre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(129, 129, 129))
                            .addGroup(tabIngreCadLayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(tabIngreCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fornCadIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(valCadIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(precoUniCadIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(tabIngreCadLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(tabIngreCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nomeCadIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quantCadIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
            .addGroup(tabIngreCadLayout.createSequentialGroup()
                .addGroup(tabIngreCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabIngreCadLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(IngreCadHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 819, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabIngreCadLayout.createSequentialGroup()
                        .addGap(341, 341, 341)
                        .addComponent(cadIngreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        tabIngreCadLayout.setVerticalGroup(
            tabIngreCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabIngreCadLayout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addComponent(IngreCadHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cadIngreLabel)
                .addGap(47, 47, 47)
                .addGroup(tabIngreCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeLabelCadIngre)
                    .addComponent(nomeCadIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(tabIngreCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(quantLabelCadIngre)
                    .addComponent(quantCadIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(tabIngreCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(precoUniLabelCadIngre)
                    .addComponent(precoUniCadIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(tabIngreCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valLabelCadIngre)
                    .addComponent(valCadIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(tabIngreCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fornLabelCadIngre)
                    .addComponent(fornCadIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addComponent(cadastrarCadIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabIngreCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(voltarCadIngre, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(tabIngreCadLayout.createSequentialGroup()
                        .addComponent(limparCadIngre, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                        .addContainerGap(100, Short.MAX_VALUE))))
        );

        tabs.addTab("tab3", tabIngreCad);

        tabVenda.setBackground(new java.awt.Color(251, 242, 212));

        vendaCadHeader.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        vendaCadHeader.setForeground(new java.awt.Color(67, 40, 28));
        vendaCadHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vendaCadHeader.setText("Vendas");

        prodVendaList.setForeground(new java.awt.Color(67, 40, 28));
        prodVendaList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Valid.", "Preço", "Quant.", "Fornecedor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        prodVendaList.setFocusable(false);
        prodVendaList.setGridColor(new java.awt.Color(255, 255, 255));
        prodVendaList.setSelectionBackground(new java.awt.Color(251, 132, 123));
        prodVendaList.getTableHeader().setResizingAllowed(false);
        prodVendaList.getTableHeader().setReorderingAllowed(false);
        prodVendaList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prodVendaListMouseClicked(evt);
            }
        });
        prodVendaScroll.setViewportView(prodVendaList);
        if (prodVendaList.getColumnModel().getColumnCount() > 0) {
            prodVendaList.getColumnModel().getColumn(0).setResizable(false);
            prodVendaList.getColumnModel().getColumn(1).setResizable(false);
            prodVendaList.getColumnModel().getColumn(2).setResizable(false);
            prodVendaList.getColumnModel().getColumn(3).setResizable(false);
            prodVendaList.getColumnModel().getColumn(4).setResizable(false);
            prodVendaList.getColumnModel().getColumn(5).setResizable(false);
        }

        vendaList.setForeground(new java.awt.Color(67, 40, 28));
        vendaList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Valor", "Funcionario", "Produto", "Quantidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vendaList.setFocusable(false);
        vendaList.setGridColor(new java.awt.Color(255, 255, 255));
        vendaList.setSelectionBackground(new java.awt.Color(251, 132, 123));
        vendaList.getTableHeader().setResizingAllowed(false);
        vendaList.getTableHeader().setReorderingAllowed(false);
        vendaScroll.setViewportView(vendaList);
        if (vendaList.getColumnModel().getColumnCount() > 0) {
            vendaList.getColumnModel().getColumn(0).setResizable(false);
            vendaList.getColumnModel().getColumn(1).setResizable(false);
            vendaList.getColumnModel().getColumn(2).setResizable(false);
            vendaList.getColumnModel().getColumn(3).setResizable(false);
            vendaList.getColumnModel().getColumn(4).setResizable(false);
        }

        vendProdLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        vendProdLabel.setForeground(new java.awt.Color(72, 57, 42));
        vendProdLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vendProdLabel.setText("Produtos");

        vendaLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        vendaLabel.setForeground(new java.awt.Color(72, 57, 42));
        vendaLabel.setText("Vendas");

        valorVendaCadLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        valorVendaCadLabel.setForeground(new java.awt.Color(67, 40, 28));
        valorVendaCadLabel.setText("Quantidade: ");

        funcVendaCadLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        funcVendaCadLabel.setForeground(new java.awt.Color(67, 40, 28));
        funcVendaCadLabel.setText("Funcionários:");

        idProdVendaCadLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        idProdVendaCadLabel.setForeground(new java.awt.Color(67, 40, 28));
        idProdVendaCadLabel.setText("ID do Produto:");

        funcVendaCad.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        funcVendaCad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Funcionarios>" }));
        funcVendaCad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                funcVendaCadActionPerformed(evt);
            }
        });

        vendaCadButton.setBackground(new java.awt.Color(102, 255, 102));
        vendaCadButton.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        vendaCadButton.setForeground(new java.awt.Color(0, 153, 0));
        vendaCadButton.setText("Registrar");
        vendaCadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendaCadButtonActionPerformed(evt);
            }
        });

        vendaDelButton.setBackground(new java.awt.Color(255, 153, 153));
        vendaDelButton.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        vendaDelButton.setForeground(new java.awt.Color(255, 51, 51));
        vendaDelButton.setText("Excluir");
        vendaDelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendaDelButtonActionPerformed(evt);
            }
        });

        qntVendaCad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qntVendaCadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabVendaLayout = new javax.swing.GroupLayout(tabVenda);
        tabVenda.setLayout(tabVendaLayout);
        tabVendaLayout.setHorizontalGroup(
            tabVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabVendaLayout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addComponent(vendProdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabVendaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(tabVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tabVendaLayout.createSequentialGroup()
                        .addComponent(prodVendaScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(tabVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabVendaLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                                .addGroup(tabVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(funcVendaCadLabel)
                                    .addComponent(valorVendaCadLabel))
                                .addGap(28, 28, 28)
                                .addGroup(tabVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(tabVendaLayout.createSequentialGroup()
                                        .addComponent(funcVendaCad, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE))
                                    .addGroup(tabVendaLayout.createSequentialGroup()
                                        .addComponent(qntVendaCad, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(tabVendaLayout.createSequentialGroup()
                                .addGroup(tabVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(tabVendaLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(vendaScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(tabVendaLayout.createSequentialGroup()
                                        .addGap(209, 209, 209)
                                        .addComponent(vendaLabel))
                                    .addGroup(tabVendaLayout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addGroup(tabVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(tabVendaLayout.createSequentialGroup()
                                                .addComponent(idProdVendaCadLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(idProdVendaCad, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(tabVendaLayout.createSequentialGroup()
                                                .addComponent(vendaCadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(vendaDelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(30, 30, 30)))))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(vendaCadHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 841, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );
        tabVendaLayout.setVerticalGroup(
            tabVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabVendaLayout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(vendaCadHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(vendProdLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(tabVendaLayout.createSequentialGroup()
                        .addGroup(tabVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(valorVendaCadLabel)
                            .addComponent(qntVendaCad, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(tabVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(funcVendaCadLabel)
                            .addComponent(funcVendaCad, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(tabVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idProdVendaCadLabel)
                            .addComponent(idProdVendaCad, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(tabVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vendaCadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vendaDelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(vendaLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(vendaScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(prodVendaScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        tabs.addTab("tab2", tabVenda);

        tabInicio.setBackground(new java.awt.Color(251, 242, 212));

        jLabel2.setFont(new java.awt.Font("Rockwell Condensed", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(67, 40, 28));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("INICIO");

        javax.swing.GroupLayout tabInicioLayout = new javax.swing.GroupLayout(tabInicio);
        tabInicio.setLayout(tabInicioLayout);
        tabInicioLayout.setHorizontalGroup(
            tabInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabInicioLayout.createSequentialGroup()
                .addGap(298, 298, 298)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(346, Short.MAX_VALUE))
        );
        tabInicioLayout.setVerticalGroup(
            tabInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabInicioLayout.createSequentialGroup()
                .addContainerGap(336, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(327, 327, 327))
        );

        tabs.addTab("tab10", tabInicio);

        getContentPane().add(tabs, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, -29, 920, 840));

        buttonPanel.setBackground(new java.awt.Color(251, 242, 192));

        panVendas.setBackground(new java.awt.Color(248, 242, 208));
        panVendas.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panVendas.setPreferredSize(new java.awt.Dimension(159, 61));
        panVendas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                panVendasMouseEntered(evt);
            }
        });

        btnVendas.setFont(new java.awt.Font("Verdana", 1, 20)); // NOI18N
        btnVendas.setForeground(new java.awt.Color(255, 102, 102));
        btnVendas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnVendas.setText("Vendas");
        btnVendas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVendasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVendasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVendasMouseExited(evt);
            }
        });

        javax.swing.GroupLayout panVendasLayout = new javax.swing.GroupLayout(panVendas);
        panVendas.setLayout(panVendasLayout);
        panVendasLayout.setHorizontalGroup(
            panVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnVendas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panVendasLayout.setVerticalGroup(
            panVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnVendas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
        );

        panProd.setBackground(new java.awt.Color(248, 242, 208));
        panProd.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panProd.setPreferredSize(new java.awt.Dimension(159, 61));

        btnProd.setFont(new java.awt.Font("Verdana", 1, 20)); // NOI18N
        btnProd.setForeground(new java.awt.Color(255, 102, 102));
        btnProd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnProd.setText("Produtos");
        btnProd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnProdMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnProdMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnProdMouseExited(evt);
            }
        });

        javax.swing.GroupLayout panProdLayout = new javax.swing.GroupLayout(panProd);
        panProd.setLayout(panProdLayout);
        panProdLayout.setHorizontalGroup(
            panProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnProd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panProdLayout.setVerticalGroup(
            panProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnProd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
        );

        panFunc.setBackground(new java.awt.Color(248, 242, 208));
        panFunc.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panFunc.setPreferredSize(new java.awt.Dimension(195, 61));

        btnFunc.setFont(new java.awt.Font("Verdana", 1, 20)); // NOI18N
        btnFunc.setForeground(new java.awt.Color(255, 102, 102));
        btnFunc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnFunc.setText("Funcionários");
        btnFunc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFuncMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnFuncMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnFuncMouseExited(evt);
            }
        });

        javax.swing.GroupLayout panFuncLayout = new javax.swing.GroupLayout(panFunc);
        panFunc.setLayout(panFuncLayout);
        panFuncLayout.setHorizontalGroup(
            panFuncLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnFunc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panFuncLayout.setVerticalGroup(
            panFuncLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnFunc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
        );

        panForn.setBackground(new java.awt.Color(248, 242, 208));
        panForn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnForn.setFont(new java.awt.Font("Verdana", 1, 20)); // NOI18N
        btnForn.setForeground(new java.awt.Color(255, 102, 102));
        btnForn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnForn.setText("Fornecedores");
        btnForn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFornMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnFornMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnFornMouseExited(evt);
            }
        });

        javax.swing.GroupLayout panFornLayout = new javax.swing.GroupLayout(panForn);
        panForn.setLayout(panFornLayout);
        panFornLayout.setHorizontalGroup(
            panFornLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnForn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
        );
        panFornLayout.setVerticalGroup(
            panFornLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnForn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
        );

        panRemessa.setBackground(new java.awt.Color(248, 242, 208));
        panRemessa.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnIngredientes.setFont(new java.awt.Font("Verdana", 1, 20)); // NOI18N
        btnIngredientes.setForeground(new java.awt.Color(255, 102, 102));
        btnIngredientes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnIngredientes.setText("Ingredientes");
        btnIngredientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnIngredientesMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnIngredientesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnIngredientesMouseExited(evt);
            }
        });

        javax.swing.GroupLayout panRemessaLayout = new javax.swing.GroupLayout(panRemessa);
        panRemessa.setLayout(panRemessaLayout);
        panRemessaLayout.setHorizontalGroup(
            panRemessaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnIngredientes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panRemessaLayout.setVerticalGroup(
            panRemessaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnIngredientes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panFunc, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(panVendas, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(panProd, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(panForn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panRemessa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(panVendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panForn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panRemessa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(172, Short.MAX_VALUE))
        );

        getContentPane().add(buttonPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 230, 690));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void pesquisaSelectFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisaSelectFuncActionPerformed
       String teste = String.valueOf(pesquisaSelectFunc.getSelectedItem());
        DefaultTableModel model = (DefaultTableModel) listaFunc.getModel();
        model.setNumRows(0);

        try {
            Conexao con = new Conexao();
            Statement st = con.conexao.createStatement();
            if(teste == "<Funcionários>"){
                st.executeQuery("Select * from tb_funcionario order by id_funcionario asc");
            } else {
                st.executeQuery("Select * from tb_funcionario where nome_funcionario = '"+ teste +"'");
            }
            
             ResultSet rs  = st.getResultSet();
            
            while(rs.next()){
                model.addRow(new Object[] {
                    rs.getString("id_funcionario"),
                    rs.getString("nome_funcionario"),
                    rs.getString("sexo_funcionario"),
                    rs.getString("cargo_funcionario"),
                    rs.getString("telefone_funcionario"),
                    rs.getString("idade_funcionario"),
                    rs.getString("email_funcionario"),
                    rs.getString("cpf"),
                    "R$"+ rs.getString("salario_funcionario").replace(".", ","),
                    rs.getString("data_admissao_funcionario")
                    
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_pesquisaSelectFuncActionPerformed

    private void btnVendasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVendasMouseClicked
           
        //Botões de remover
        funcVendaCad.removeAllItems();
        funcVendaCad.addItem("<Funcionários>");
        pesquisaSelectProd.removeAllItems();
        pesquisaSelectProd.addItem("<Produtos>");
        
        try {
            Conexao con = new Conexao();
            Statement st = con.conexao.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM tb_funcionario;");
            while(rs.next()){
                String name = rs.getString("nome_funcionario");
                funcVendaCad.addItem(name);
            }
             st.executeQuery("SELECT p.id_produto,p.nome_produto, p.validade_produto,p.preco_produto,p.quantidade_produto,f.nome_fornecedor "
                    +" FROM tb_produto p inner join tb_fornecedor f "
                    +" ON f.id_fornecedor=p.fk_id_fornecedor order by p.id_produto asc; ");
            rs = st.getResultSet();
         
         DefaultTableModel model = (DefaultTableModel) prodVendaList.getModel();
         model.setNumRows(0);
         
        while(rs.next()){
            model.addRow(new Object[]{
            rs.getString("id_produto"),
            rs.getString("nome_produto"),
            rs.getString("validade_produto"),
            rs.getString("preco_produto"),
            rs.getString("quantidade_produto"),
            rs.getString("nome_fornecedor")
            
            });
        }     
        st.executeQuery("SELECT v.id_venda,v.valor_venda,f.nome_funcionario,p.nome_produto,v.qtd_venda"
                + " FROM tb_venda v inner join tb_funcionario f ON f.id_funcionario=v.fk_id_funcionario "
                + " INNER JOIN tb_produto p ON p.id_produto=v.fk_id_produto ORDER BY v.id_venda asc ");
            rs = st.getResultSet();
         
         model = (DefaultTableModel) vendaList.getModel();
         model.setNumRows(0);
         
        while(rs.next()){
            model.addRow(new Object[]{
            rs.getString("id_venda"),
            rs.getString("valor_venda"),
            rs.getString("nome_funcionario"),
            rs.getString("nome_produto"),
            rs.getString("qtd_venda")
            
            });
        } 
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro: " + e);
        }
        tabs.setSelectedIndex(8);
        btnClicked(panVendas);
        defaultColor(panProd,panForn, panRemessa, panFunc);
        
        
    }//GEN-LAST:event_btnVendasMouseClicked

    private void btnProdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProdMouseClicked
        // TODO add your handling code here:
        pesquisaSelectProd.removeAllItems();
        pesquisaSelectProd.addItem("<Produtos>");
        tabs.setSelectedIndex(2);
        btnClicked(panProd);
        defaultColor(panVendas, panFunc, panRemessa, panForn);
        try {
            Conexao con = new Conexao();
            Statement st = con.conexao.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM tb_produto;");
            while(rs.next()){
                String name = rs.getString("nome_Produto");
                pesquisaSelectProd.addItem(name);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro: " + e);
        }
        
        
    }//GEN-LAST:event_btnProdMouseClicked

    private void btnFuncMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFuncMouseClicked
        pesquisaSelectFunc.removeAllItems();
        pesquisaSelectFunc.addItem("<Funcionários>");
        try {
            Conexao con = new Conexao();
            Statement st = con.conexao.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM tb_funcionario;");
            while(rs.next()){
                String name = rs.getString("nome_funcionario");
                pesquisaSelectFunc.addItem(name);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro: " + e);
        }

        
        tabs.setSelectedIndex(0);
        btnClicked(panFunc);
        defaultColor(panVendas,panProd, panRemessa, panForn);
        
    }//GEN-LAST:event_btnFuncMouseClicked

    private void btnFornMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFornMouseClicked
        pesquisaSelectForn.removeAllItems();
        pesquisaSelectForn.addItem("<Fornecedor>");
        
        try {
            Conexao con = new Conexao();
            Statement st = con.conexao.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM tb_fornecedor;");
            while(rs.next()){
                String name = rs.getString("nome_fornecedor");
                pesquisaSelectForn.addItem(name);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro: " + e);
        }
        
        tabs.setSelectedIndex(4);
        btnClicked(panForn);
        defaultColor(panVendas,panFunc, panRemessa,panProd);
       
    }//GEN-LAST:event_btnFornMouseClicked

    private void btnIngredientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnIngredientesMouseClicked
         pesquisaSelectIngre.removeAllItems();
         pesquisaSelectIngre.addItem("<Ingredientes>");
        try {
            Conexao con = new Conexao();
            Statement st = con.conexao.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM tb_ingrediente;");
            while(rs.next()){
                String name = rs.getString("nome_ingrediente");
                pesquisaSelectIngre.addItem(name);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro: " + e);
        }
        tabs.setSelectedIndex(6);
        btnClicked(panRemessa);
        defaultColor(panVendas, panFunc, panForn,panProd);
        pesquisaSelectProd.removeAllItems();
        pesquisaSelectProd.addItem("<Produtos>");

    }//GEN-LAST:event_btnIngredientesMouseClicked

    private void panVendasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panVendasMouseEntered
        // TODO add your handling code here:
        
    }//GEN-LAST:event_panVendasMouseEntered


    private void botaoAddProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAddProdActionPerformed
        tabs.setSelectedIndex(3);
        try {
            Conexao con = new Conexao();
            Statement st = con.conexao.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM tb_fornecedor;");
            while(rs.next()){
                String name = rs.getString("nome_fornecedor");
                fornCadProd.addItem(name);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro: " + e);
        }
    }//GEN-LAST:event_botaoAddProdActionPerformed

    private void voltarCadProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarCadProdActionPerformed
        tabs.setSelectedIndex(2);
        fornCadProd.removeAllItems();
        nomeCadProd.setText("");
        valCadProd.setText("");
        precoCadProd.setText("");
        quantCadProd.setText("");
        pesquisaSelectProd.removeAllItems();
        pesquisaSelectProd.addItem("<Produtos>");
       
    }//GEN-LAST:event_voltarCadProdActionPerformed

    private void cadastrarCadProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarCadProdActionPerformed
          
        
        String data = valCadProd.getText();
        
        String [] dataAlterada = data.split("/");
        
        LocalDate dataNova = LocalDate.of(Integer.parseInt(dataAlterada[2]), Integer.parseInt(dataAlterada[1]), Integer.parseInt(dataAlterada[0]));
        
        try {
            Conexao con = new Conexao();
            Statement st = con.conexao.createStatement();
            st.executeUpdate("INSERT INTO tb_produto(nome_produto,"
                    + "validade_produto,preco_produto,quantidade_produto,"
                    + "fk_id_fornecedor) VALUES ('"+nomeCadProd.getText()+"','"+dataNova
            +"',"+precoCadProd.getText()+","+quantCadProd.getText()+",'"+fornCadProd.getSelectedIndex()+"');");
            JOptionPane.showMessageDialog(null, "Produto: " + nomeCadProd.getText() + " cadastrado com sucesso!");
        } catch (Exception e) {
             e.printStackTrace();
             JOptionPane.showMessageDialog(null, e);
        }
        
        nomeCadProd.setText("");
        valCadProd.setText("");
        precoCadProd.setText("");
        quantCadProd.setText("");
        fornCadProd.setSelectedIndex(0);
        
        
        
    }//GEN-LAST:event_cadastrarCadProdActionPerformed

    private void fornCadProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fornCadProdActionPerformed
       
    }//GEN-LAST:event_fornCadProdActionPerformed

    private void limparCadProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparCadProdActionPerformed
        nomeCadProd.setText("");
        valCadProd.setText("");
        precoCadProd.setText("");
        quantCadProd.setText("");
        fornCadProd.setSelectedIndex(0);
    }//GEN-LAST:event_limparCadProdActionPerformed

    private void pesquisaBotaoProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisaBotaoProdActionPerformed
        try {
         Conexao con = new Conexao();
         Statement st = con.conexao.createStatement();
         
            if(!pesquisaIdProd.getText().equals("") && !pesquisaNomeProd.getText().equals("")) {
                st.executeQuery("SELECT p.id_produto,p.nome_produto, p.validade_produto,p.preco_produto,p.quantidade_produto,f.nome_fornecedor "
                 +" FROM tb_produto p INNER JOIN tb_fornecedor f "
                 + "ON f.id_fornecedor=p.fk_id_fornecedor "
                 +" WHERE id_produto="+pesquisaIdProd.getText()
                 +" AND nome_produto like '%"+pesquisaNomeProd.getText()+"%'");
             } else if (!pesquisaIdProd.getText().equals("")) {
               
                 st.executeQuery("SELECT p.id_produto,p.nome_produto, p.validade_produto,p.preco_produto,p.quantidade_produto, f.nome_fornecedor"
                    + " FROM tb_produto p inner join tb_fornecedor f "
                    + " ON id_fornecedor= p.fk_id_fornecedor"
                    + " WHERE id_produto="+pesquisaIdProd.getText());
             
             } else if (!pesquisaNomeProd.getText().equals("")) {
             
                 st.executeQuery("SELECT p.id_produto,p.nome_produto, p.validade_produto,p.preco_produto"
                    + ",p.quantidade_produto,f.nome_fornecedor"
                    + " FROM tb_produto p "
                    + " INNER JOIN tb_fornecedor f "
                    + " ON f.id_fornecedor=p.fk_id_fornecedor "
                    + " WHERE nome_produto like '%"+pesquisaNomeProd.getText()+"%'");
             
             } else {
                 st.executeQuery("SELECT p.id_produto,p.nome_produto, p.validade_produto,p.preco_produto,p.quantidade_produto,f.nome_fornecedor "
                    +" FROM tb_produto p inner join tb_fornecedor f "
                    +" ON f.id_fornecedor=p.fk_id_fornecedor; ");
             
             }
         ResultSet rs = st.getResultSet();
         
         DefaultTableModel model = (DefaultTableModel) listaProd.getModel();
         model.setNumRows(0);
         
         while(rs.next()) {
                model.addRow(new Object[] 
                {
                    rs.getString("id_produto"),
                    rs.getString("nome_produto"),
                    rs.getString("validade_produto"),
                    rs.getString("preco_produto"),
                    rs.getString("quantidade_produto"),
                    rs.getString("nome_fornecedor")
                    
                });
            }
         
         
         
         
        } catch (Exception e) {
             e.printStackTrace();
        }
    }//GEN-LAST:event_pesquisaBotaoProdActionPerformed

    private void cadastrarCadFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarCadFuncActionPerformed
        // TODO add your handling code here:
        String sexo = "";
        String data = dataAdmCadFunc.getText();
        
        String [] dataAlterada = data.split("/");
        
        LocalDate dataNova = LocalDate.of(Integer.parseInt(dataAlterada[2]), Integer.parseInt(dataAlterada[1]), Integer.parseInt(dataAlterada[0]));
        
        
        
        
        if (femButton.isSelected()) {
            sexo = "F";
        }
        else if (mascButton.isSelected()) {
            sexo = "M";
        }
        else if (outroButton.isSelected()) {
            sexo = "O";
        }
        
        
            try {
            Conexao con = new Conexao();
            Statement st = con.conexao.createStatement();
            st.executeUpdate("INSERT INTO tb_funcionario (nome_funcionario, email_funcionario, telefone_funcionario, salario_funcionario, cargo_funcionario, sexo_funcionario, idade_funcionario, data_admissao_funcionario, cpf) VALUES ('"+nomeCadFunc.getText()+"', '"+ emailCadFunc.getText() +"', '"+ telCadFunc.getText() +"', "+salarioCadFunc.getText().replace(',', '.') +", '"+cargoCadFunc.getText()+"','"+sexo+"',"+idadeCadFunc.getText()+", '"+dataNova+"', '"+cpfCadFunc.getText()+"')");
            
            
            JOptionPane.showMessageDialog(null, "Funcionario "+ nomeCadFunc.getText() +" inserido com Sucesso!"); 
            nomeCadFunc.setText("");
            emailCadFunc.setText("");
            telCadFunc.setText("");
            salarioCadFunc.setText("");
            cargoCadFunc.setText("");
            idadeCadFunc.setText("");
            dataAdmCadFunc.setText("");
            cpfCadFunc.setText("");
            
         
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro: " + e);
        }
    }//GEN-LAST:event_cadastrarCadFuncActionPerformed


    private void btnVendasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVendasMouseEntered
        // TODO add your handling code here:
        hoverColor(panVendas);
    }//GEN-LAST:event_btnVendasMouseEntered

    private void btnVendasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVendasMouseExited
        // TODO add your handling code here:
        removeHoverColor(panVendas);
    }//GEN-LAST:event_btnVendasMouseExited

    private void btnProdMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProdMouseEntered
        // TODO add your handling code here:
        hoverColor(panProd);
    }//GEN-LAST:event_btnProdMouseEntered

    private void btnProdMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProdMouseExited
        // TODO add your handling code here:
        removeHoverColor(panProd);
    }//GEN-LAST:event_btnProdMouseExited

    private void btnFuncMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFuncMouseEntered
        // TODO add your handling code here:
        hoverColor(panFunc);
    }//GEN-LAST:event_btnFuncMouseEntered

    private void btnFuncMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFuncMouseExited
        // TODO add your handling code here:
        removeHoverColor(panFunc);
    }//GEN-LAST:event_btnFuncMouseExited

    private void btnFornMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFornMouseEntered
        // TODO add your handling code here:
        hoverColor(panForn);
    }//GEN-LAST:event_btnFornMouseEntered

    private void btnFornMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFornMouseExited
        // TODO add your handling code here:
        removeHoverColor(panForn);
    }//GEN-LAST:event_btnFornMouseExited

    private void btnIngredientesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnIngredientesMouseEntered
        // TODO add your handling code here:
        hoverColor(panRemessa);
    }//GEN-LAST:event_btnIngredientesMouseEntered

    private void btnIngredientesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnIngredientesMouseExited
        // TODO add your handling code here:
        removeHoverColor(panRemessa);
    }//GEN-LAST:event_btnIngredientesMouseExited

    public void hoverColor(JPanel panel) {
        panel.setBackground(new Color(239, 224, 185));
    }
    public void btnClicked (JPanel panel) {
        
        panel.setBackground(new Color(234, 212, 170));
    }
    public void removeHoverColor (JPanel panel) {
        
        panel.setBackground(new Color(248,242,208));
        
    }

    private void cpfCadFuncCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_cpfCadFuncCaretUpdate
        // TODO add your handling code here:
        Runnable cpfCadFuncCaretUpdate = new Runnable() {
        @Override
        public void run() {
            // your highlight code
                 if (cpfCadFunc.getText().length()> 5) {
            /*hTerminoError.setText("Formato inválido");*/
        }
           if (cpfCadFunc.getText().length()< 6) {
            /*hTerminoError.setText("");*/
        }
           
        
        
        
        if (cpfCadFunc.getText().length()==2 || cpfCadFunc.getText().length()==6 || cpfCadFunc.getText().length()==9) {
            b = false;
        }
        if((cpfCadFunc.getText().length()==3 || cpfCadFunc.getText().length()==7 ) && b == false){  
            cpfCadFunc.setText(cpfCadFunc.getText() + ".");
            b = true;
        }
        
        else if((cpfCadFunc.getText().length()==11) && b == false){  
            cpfCadFunc.setText(cpfCadFunc.getText() + "-");
            b = true;
        }
        
        if((cpfCadFunc.getText().length()==15)){  
            cpfCadFunc.setText(cpfCadFunc.getText().replaceFirst(".$",""));
           
        }
        
        }
    };
        
        
    SwingUtilities.invokeLater(cpfCadFuncCaretUpdate);
    }//GEN-LAST:event_cpfCadFuncCaretUpdate

    private void botaoAddFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAddFuncActionPerformed
        // TODO add your handling code here:
        tabs.setSelectedIndex(1);
    }//GEN-LAST:event_botaoAddFuncActionPerformed

    private void voltarCadFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarCadFuncActionPerformed
        // TODO add your handling code here:
        tabs.setSelectedIndex(0);
    }//GEN-LAST:event_voltarCadFuncActionPerformed

    private void valCadProdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_valCadProdFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_valCadProdFocusLost

    private void botaoAddIngreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAddIngreActionPerformed
         fornCadIngre.removeAllItems();
         fornCadIngre.addItem("<Fornecedor>");
        tabs.setSelectedIndex(7);
        try {
            Conexao con = new Conexao();
            Statement st = con.conexao.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM tb_fornecedor;");
            while(rs.next()){
                String name = rs.getString("nome_fornecedor");
                fornCadIngre.addItem(name);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro: " + e);
        
       
    }                                             
    
    }//GEN-LAST:event_botaoAddIngreActionPerformed

    private void cadastrarCadIngreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarCadIngreActionPerformed
       
        String data = valCadIngre.getText();
        
        String [] dataAlterada = data.split("/");
        
        LocalDate dataNova = LocalDate.of(Integer.parseInt(dataAlterada[2]), Integer.parseInt(dataAlterada[1]), Integer.parseInt(dataAlterada[0]));
        JOptionPane.showMessageDialog(null, dataNova);
        try {
            JOptionPane.showMessageDialog(null,"antes do insert");
            Conexao con = new Conexao();
            Statement st = con.conexao.createStatement();
            st.executeUpdate("INSERT INTO padaria.tb_ingrediente(nome_ingrediente,"
                    + "quantidade_ingrediente,precounitario_ingrediente,validade_ingrediente,"
                    + "fk_id_fornecedor) VALUES ('"+nomeCadIngre.getText()+"',"+quantCadIngre.getText()
            +","+precoUniCadIngre.getText()+",'"+dataNova+"','"+fornCadIngre.getSelectedIndex()+"');");
            JOptionPane.showMessageDialog(null, "Ingrediente: " + nomeCadIngre.getText() + " cadastrado com sucesso!");
            
        } catch (Exception e) {
             e.printStackTrace();
        }
        
        nomeCadIngre.setText("");
        quantCadIngre.setText("");
        precoUniCadIngre.setText("");
        valCadIngre.setText("");
        fornCadIngre.setSelectedIndex(0);
    }//GEN-LAST:event_cadastrarCadIngreActionPerformed

    private void precoUniCadIngreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precoUniCadIngreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_precoUniCadIngreActionPerformed

    private void voltarCadIngreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarCadIngreActionPerformed
        pesquisaSelectIngre.removeAllItems();
        pesquisaSelectIngre.addItem("<Ingredientes>");
         try {
            Conexao con = new Conexao();
            Statement st = con.conexao.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM tb_ingrediente;");
            while(rs.next()){
                String name = rs.getString("nome_ingrediente");
                pesquisaSelectIngre.addItem(name);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro: " + e);
        }
        tabs.setSelectedIndex(6);
    }//GEN-LAST:event_voltarCadIngreActionPerformed

    private void limparCadIngreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparCadIngreActionPerformed
        nomeCadIngre.setText("");
        quantCadIngre.setText("");
        precoUniCadIngre.setText("");
        valCadIngre.setText("");
        fornCadIngre.setSelectedIndex(0);
    }//GEN-LAST:event_limparCadIngreActionPerformed

    private void pesquisaBotaoIngreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisaBotaoIngreActionPerformed
       try {
         Conexao con = new Conexao();
         Statement st = con.conexao.createStatement();
         
            if(!pesquisaIdIngre.getText().equals("") && !pesquisaNomeIngre.getText().equals("")) {
                st.executeQuery("SELECT r.id_ingrediente,r.nome_ingrediente,r.validade_ingrediente,r.precounitario_ingrediente,r.quantidade_ingrediente,f.nome_fornecedor "
                 +" FROM tb_ingrediente r INNER JOIN tb_fornecedor f "
                 + "ON f.id_fornecedor=r.fk_id_fornecedor "
                 +" WHERE r.id_ingrediente="+pesquisaIdIngre.getText()
                 +" AND r.nome_ingrediente like '%"+pesquisaNomeIngre.getText()+"%'");
            
            } else if (!pesquisaIdIngre.getText().equals("")) {   
                 st.executeQuery("SELECT r.id_ingrediente,r.nome_ingrediente,r.validade_ingrediente,r.precounitario_ingrediente,r.quantidade_ingrediente,f.nome_fornecedor "
                    + " FROM tb_ingrediente r "
                    + " INNER JOIN tb_fornecedor f "
                    + " ON id_fornecedor= r.fk_id_fornecedor"
                    + " WHERE r.id_ingrediente="+pesquisaIdIngre.getText());
             
             } else if (!pesquisaNomeIngre.getText().equals("")) {            
                 st.executeQuery("SELECT r.id_ingrediente,r.nome_ingrediente,r.validade_ingrediente,r.precounitario_ingrediente,r.quantidade_ingrediente,f.nome_fornecedor "
                    + " FROM tb_ingrediente r "
                    + " INNER JOIN tb_fornecedor f "
                    + " ON f.id_fornecedor=r.fk_id_fornecedor "
                    + " WHERE r.nome_ingrediente like '%"+pesquisaNomeIngre.getText()+"%'");
             
             } else {
                 st.executeQuery("SELECT r.id_ingrediente,r.nome_ingrediente,r.validade_ingrediente,r.precounitario_ingrediente,r.quantidade_ingrediente,f.nome_fornecedor "
                    +" FROM tb_ingrediente r  "
                    +" INNER JOIN tb_fornecedor f"
                    +" ON f.id_fornecedor=r.fk_id_fornecedor ");
             
             }
            
         ResultSet rs = st.getResultSet();
         
         DefaultTableModel model = (DefaultTableModel) listaIngre.getModel();
         model.setNumRows(0);
         
         while(rs.next()) {
                model.addRow(new Object[] 
                {
                    rs.getString("id_ingrediente"),
                    rs.getString("nome_ingrediente"),
                    rs.getString("validade_ingrediente"),
                    rs.getString("precounitario_ingrediente"),
                    rs.getString("quantidade_ingrediente"),
                    rs.getString("nome_fornecedor")
                    
                });
            }
         
         
         
         
        } catch (Exception e) {
             e.printStackTrace();
        }
    }//GEN-LAST:event_pesquisaBotaoIngreActionPerformed

    private void botaoAddFornActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAddFornActionPerformed
        // TODO add your handling code here:
        tabs.setSelectedIndex(5);
    }//GEN-LAST:event_botaoAddFornActionPerformed

    private void voltarCadFornActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarCadFornActionPerformed
        // TODO add your handling code here:
        tabs.setSelectedIndex(4);
    }//GEN-LAST:event_voltarCadFornActionPerformed

    private void cadastrarCadFornActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarCadFornActionPerformed
        // TODO add your handling code here:
        try {
            Conexao conn = new Conexao();
            Statement st = conn.conexao.createStatement();
            
            st.executeUpdate("Insert into tb_fornecedor (nome_fornecedor,email_fornecedor, telefone_fornecedor, tipo_fornecedor, status_fornecedor) VALUES ('"+ nomeCadForn.getText() +"', '"+ emailCadForn.getText() +"', '"+ telCadForn.getText() +"',  '"+ tipoCadForn.getText() +"', '"+ sttsCadForn.getText() +"')");
            JOptionPane.showMessageDialog(null, "Fornecedor: " + nomeCadForn.getText() + " adicionado com sucesso!");
            nomeCadForn.setText("");
            emailCadForn.setText("");
            telCadForn.setText("");
            tipoCadForn.setText("");
            sttsCadForn.setText("");
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_cadastrarCadFornActionPerformed

    private void closeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeBtnMouseClicked
        // TODO add your handling code here:
        
        System.exit(0);
    }//GEN-LAST:event_closeBtnMouseClicked

    private void pesquisaSelectProdCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_pesquisaSelectProdCaretPositionChanged
        // TODO add your handling code here:
       

    }//GEN-LAST:event_pesquisaSelectProdCaretPositionChanged

    private void pesquisaSelectProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisaSelectProdActionPerformed
        // TODO add your handling code here:
        String teste = String.valueOf(pesquisaSelectProd.getSelectedItem());
        DefaultTableModel model = (DefaultTableModel) listaProd.getModel();
        model.setNumRows(0);

        try {
            Conexao con = new Conexao();
            Statement st = con.conexao.createStatement();
            if(teste == "<Produtos>"){
                st.executeQuery("Select p.*, f.nome_fornecedor from tb_produto p inner join tb_fornecedor f on f.id_fornecedor = p.fk_id_fornecedor order by id_produto asc");
            } else {
                st.executeQuery("Select p.*, f.nome_fornecedor from tb_produto p inner join tb_fornecedor f on f.id_fornecedor = p.fk_id_fornecedor where nome_produto = '"+ teste +"'");
            }
            
             ResultSet rs  = st.getResultSet();
            
            while(rs.next()){
                model.addRow(new Object[] {
                    rs.getString("id_produto"),
                    rs.getString("nome_produto"),
                    rs.getString("validade_produto"),
                    "R$"+ rs.getString("preco_produto").replace(".", ","),
                    rs.getString("quantidade_produto"),
                    rs.getString("nome_fornecedor")
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        
        
    }//GEN-LAST:event_pesquisaSelectProdActionPerformed

    private void pesquisaSelectFornActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisaSelectFornActionPerformed
        // TODO add your handling code here:
        String teste = String.valueOf(pesquisaSelectForn.getSelectedItem());
        DefaultTableModel model = (DefaultTableModel) listaForn.getModel();
        model.setNumRows(0);

        try {
            Conexao con = new Conexao();
            Statement st = con.conexao.createStatement();
            if(teste == "<Fornecedor>"){
                st.executeQuery("Select * from tb_fornecedor order by id_fornecedor asc");
            } else {
                st.executeQuery("Select * from tb_fornecedor where nome_fornecedor = '"+ teste +"'");
            }
            
             ResultSet rs  = st.getResultSet();
            
            while(rs.next()){
                model.addRow(new Object[] {
                    rs.getString("id_fornecedor"),
                    rs.getString("nome_fornecedor"),
                    rs.getString("tipo_fornecedor"),
                    rs.getString("status_fornecedor"),
                    rs.getString("telefone_fornecedor"),
                    rs.getString("email_fornecedor")
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_pesquisaSelectFornActionPerformed

    private void pesquisaSelectIngreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisaSelectIngreActionPerformed
        // TODO add your handling code here:
        String teste = String.valueOf(pesquisaSelectIngre.getSelectedItem());
        DefaultTableModel model = (DefaultTableModel) listaIngre.getModel();
        model.setNumRows(0);

        try {
            Conexao con = new Conexao();
            Statement st = con.conexao.createStatement();
            if(teste == "<Ingredientes>"){
                st.executeQuery("Select i.*, f.nome_fornecedor from tb_ingrediente i inner join tb_fornecedor f on f.id_fornecedor = i.fk_id_fornecedor order by id_ingrediente asc");
            } else {
                st.executeQuery("Select i.*, f.nome_fornecedor from tb_ingrediente i inner join tb_fornecedor f on f.id_fornecedor = i.fk_id_fornecedor where nome_ingrediente = '"+ teste +"'");
            }
            
             ResultSet rs  = st.getResultSet();
            
            while(rs.next()){
                model.addRow(new Object[] {
                    rs.getString("id_ingrediente"),
                    rs.getString("nome_ingrediente"),
                    rs.getString("validade_ingrediente"),
                    "R$" + rs.getString("precounitario_ingrediente"),
                    rs.getString("quantidade_ingrediente"),
                    rs.getString("nome_fornecedor")
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_pesquisaSelectIngreActionPerformed

    private void vendaCadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendaCadButtonActionPerformed
        // TODO add your handling code here:
        int qtdProduto=0;
        int qtdFinal;
        int valor = 0;
        Boolean limparDados = false;
        try {
            Conexao con = new Conexao();
            Statement st = con.conexao.createStatement();
            st.executeQuery("SELECT * FROM tb_funcionario WHERE nome_funcionario='"+funcVendaCad.getSelectedItem()+"'" );
            
            String id="";
            ResultSet rs = st.getResultSet();
            while(rs.next()){
                
                id=rs.getString("id_funcionario");
            }
            
            st.executeQuery("SELECT * FROM tb_produto WHERE id_produto="+idProdVendaCad.getText()+"");
            rs = st.getResultSet();
            while(rs.next()){
                valor = rs.getInt("preco_produto");
                qtdProduto=Integer.parseInt(rs.getString("quantidade_produto"));
             
            } 
            String qtd = qntVendaCad.getText();
            qtdFinal = qtdProduto - Integer.parseInt(qntVendaCad.getText());
            if((qtdFinal ) == 0 ){
             st.executeUpdate("DELETE FROM tb_produto WHERE id_produto ="+ Integer.parseInt(idProdVendaCad.getText()) +"");
             limparDados = true;
            }
            else if (qtdFinal < 0) {
                JOptionPane.showMessageDialog(null, "Quantidade insuficiente no estoque para realizar essa venda");
            }
            else {
            limparDados = true;
            st.executeUpdate("insert into tb_venda (valor_venda, fk_id_funcionario, fk_id_produto, qtd_venda) VALUES ("+ valor*Integer.parseInt(qntVendaCad.getText()) +", "+ id+", "+ idProdVendaCad.getText() +", "+ qntVendaCad.getText() +" )");
            
            st.executeUpdate("Update tb_produto set quantidade_produto =  quantidade_produto - "+  qtd + " where id_produto = "+ idProdVendaCad.getText() +"");  
            }
            
            
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        if (limparDados == true) {
            funcVendaCad.setSelectedIndex(0);
            idProdVendaCad.setText("");
            qntVendaCad.setText("");
            JOptionPane.showMessageDialog(null, "Venda cadastrada com sucesso");
            //começa o código de atualizar as duas tables (tudo que está entre esse comentário de início, e o comentário de término, é o código que atualiza as tabelas, portanto pode ser excluído
                           
        //Botões de remover
        funcVendaCad.removeAllItems();
        funcVendaCad.addItem("<Funcionários>");
        pesquisaSelectProd.removeAllItems();
        pesquisaSelectProd.addItem("<Produtos>");
        
        try {
            Conexao con = new Conexao();
            Statement st = con.conexao.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM tb_funcionario;");
            while(rs.next()){
                String name = rs.getString("nome_funcionario");
                funcVendaCad.addItem(name);
            }
             st.executeQuery("SELECT p.id_produto,p.nome_produto, p.validade_produto,p.preco_produto,p.quantidade_produto,f.nome_fornecedor "
                    +" FROM tb_produto p inner join tb_fornecedor f "
                    +" ON f.id_fornecedor=p.fk_id_fornecedor order by p.id_produto asc; ");
            rs = st.getResultSet();
         
         DefaultTableModel model = (DefaultTableModel) prodVendaList.getModel();
         model.setNumRows(0);
         
        while(rs.next()){
            model.addRow(new Object[]{
            rs.getString("id_produto"),
            rs.getString("nome_produto"),
            rs.getString("validade_produto"),
            rs.getString("preco_produto"),
            rs.getString("quantidade_produto"),
            rs.getString("nome_fornecedor")
            
            });
        }     
        st.executeQuery("SELECT v.id_venda,v.valor_venda,f.nome_funcionario,p.nome_produto,v.qtd_venda"
                + " FROM tb_venda v inner join tb_funcionario f ON f.id_funcionario=v.fk_id_funcionario "
                + " INNER JOIN tb_produto p ON p.id_produto=v.fk_id_produto ORDER BY v.id_venda asc ");
            rs = st.getResultSet();
         
         model = (DefaultTableModel) vendaList.getModel();
         model.setNumRows(0);
         
        while(rs.next()){
            model.addRow(new Object[]{
            rs.getString("id_venda"),
            rs.getString("valor_venda"),
            rs.getString("nome_funcionario"),
            rs.getString("nome_produto"),
            rs.getString("qtd_venda")
            
            });
        } 
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro: " + e);
        }
        tabs.setSelectedIndex(8);
        btnClicked(panVendas);
        defaultColor(panProd,panForn, panRemessa, panFunc);
        
            //termina o código de atualizar as duas tabelas 
            
        }
    }//GEN-LAST:event_vendaCadButtonActionPerformed

    private void pesquisaBotaoFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisaBotaoFuncActionPerformed
        try {
        Conexao con = new Conexao();
        Statement st = con.conexao.createStatement();  
        if(!pesquisaNomeFunc.getText().equals("") && !pesquisaIdFunc.getText().equals("")){
            st.executeQuery("SELECT * FROM tb_funcionario WHERE id_funcionario="+pesquisaIdFunc.getText()+""
            + "AND nome_funcionario LIKE '%"+pesquisaNomeFunc.getText()+"%'");
        } else if (!pesquisaNomeFunc.getText().equals("")){
            st.executeQuery("SELECT * FROM tb_funcionario WHERE nome_funcionario like '%"+pesquisaNomeFunc.getText()+"%'");
        } else if(!pesquisaIdFunc.getText().equals("")){
            st.executeQuery("SELECT * FROM tb_funcionario WHERE id_funcionario="+pesquisaIdFunc.getText());
        } else {
            st.executeQuery("SELECT * FROM tb_funcionario");
        }
        ResultSet rs = st.getResultSet();
         
         DefaultTableModel model = (DefaultTableModel) listaFunc.getModel();
         model.setNumRows(0);
         
         while(rs.next()) {
                model.addRow(new Object[] 
                {
                    rs.getString("id_funcionario"),
                    rs.getString("nome_funcionario"),
                    rs.getString("sexo_funcionario"),
                    rs.getString("cargo_funcionario"),
                    rs.getString("telefone_funcionario"),
                    rs.getString("idade_funcionario"),
                    rs.getString("email_funcionario"),
                    rs.getString("cpf"),
                    "R$"+rs.getString("salario_funcionario"),
                    rs.getString("data_admissao_funcionario")
                    
                });
            }
        
        
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(null, e);
        }
    }//GEN-LAST:event_pesquisaBotaoFuncActionPerformed

    private void pesquisaBotaoFornActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisaBotaoFornActionPerformed
        try {
            Conexao con = new Conexao();
            Statement st = con.conexao.createStatement();
            if(!pesquisaNomeForn.getText().equals("") && !pesquisaIdForn.getText().equals("")) {
                st.executeQuery("SELECT * FROM tb_fornecedor WHERE id_fornecedor="+pesquisaIdForn.getText()+""
                +" AND nome_fornecedor LIKE '%"+pesquisaNomeForn.getText()+"%'");
            } else if (!pesquisaNomeForn.getText().equals("")){
                st.executeQuery("SELECT * FROM tb_fornecedor WHERE nome_fornecedor like '%"+pesquisaNomeForn.getText()+"%'");
            } else if (!pesquisaIdForn.getText().equals("")) {
                st.executeQuery("SELECT * FROM tb_fornecedor WHERE id_fornecedor="+pesquisaIdForn.getText());
            } else {
                st.executeQuery("SELECT * FROM tb_fornecedor");
            }
            ResultSet rs = st.getResultSet();
         
            DefaultTableModel model = (DefaultTableModel) listaForn.getModel();
             model.setNumRows(0);
         
             while(rs.next()) {
                model.addRow(new Object[] 
                {
                    rs.getString("id_fornecedor"),
                    rs.getString("nome_fornecedor"),
                    rs.getString("tipo_fornecedor"),
                    rs.getString("status_fornecedor"),
                    rs.getString("telefone_fornecedor"),
                    rs.getString("email_fornecedor")
                    
                });
            }
            
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(null, e);
        }
        
    }//GEN-LAST:event_pesquisaBotaoFornActionPerformed

    private void botaoDelFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDelFuncActionPerformed
        // TODO add your handling code here:
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog (null, "Tem certeza que deseja excluir este dado?","CUIDADO!!",dialogButton);
        if(dialogResult == JOptionPane.YES_OPTION){
            try {
                DefaultTableModel model = (DefaultTableModel) listaFunc.getModel();
                int selectedRow = listaFunc.getSelectedRow();
                Conexao con = new Conexao();
                Statement st = con.conexao.createStatement();
                st.executeUpdate("DELETE FROM tb_venda WHERE fk_id_funcionario = '"+ model.getValueAt(selectedRow, 0) +"'");
                st.executeUpdate("DELETE FROM tb_funcionario WHERE id_funcionario = "+ model.getValueAt(selectedRow, 0) +"");
                st.executeQuery("SELECT * FROM tb_funcionario");
        
                ResultSet rs = st.getResultSet();

                 
                 model.setNumRows(0);

                 while(rs.next()) {
                        model.addRow(new Object[] 
                        {
                            rs.getString("id_funcionario"),
                            rs.getString("nome_funcionario"),
                            rs.getString("sexo_funcionario"),
                            rs.getString("cargo_funcionario"),
                            rs.getString("telefone_funcionario"),
                            rs.getString("idade_funcionario"),
                            rs.getString("email_funcionario"),
                            rs.getString("cpf"),
                            "R$"+rs.getString("salario_funcionario"),
                            rs.getString("data_admissao_funcionario")

                        });
                    }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_botaoDelFuncActionPerformed

    private void closeBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeBtnMouseEntered
        // TODO add your handling code here:
        jLabel1.setForeground(Color.red);
    }//GEN-LAST:event_closeBtnMouseEntered

    private void closeBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeBtnMouseExited
        // TODO add your handling code here:
        jLabel1.setForeground(Color.white);
    }//GEN-LAST:event_closeBtnMouseExited

    private void funcVendaCadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_funcVendaCadActionPerformed
        
    }//GEN-LAST:event_funcVendaCadActionPerformed

    private void vendaDelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendaDelButtonActionPerformed
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog (null, "Tem certeza que deseja excluir este dado?","CUIDADO!!",dialogButton);
        if(dialogResult == JOptionPane.YES_OPTION){
        try {
            DefaultTableModel model = (DefaultTableModel) vendaList.getModel();
            int selectedRow = vendaList.getSelectedRow();
            Conexao con = new Conexao();
            Statement st = con.conexao.createStatement();
            st.executeUpdate("DELETE FROM tb_venda WHERE id_venda="+model.getValueAt(selectedRow, 0)+"");
            st.executeQuery("SELECT v.*,f.nome_funcionario,p.nome_produto FROM tb_venda v INNER JOIN tb_funcionario f ON f.id_funcionario=v.fk_id_funcionario INNER JOIN tb_produto p ON p.id_produto=v.fk_id_produto");
            
            ResultSet rs = st.getResultSet();
             model.setNumRows(0);
         
             while(rs.next()) {
                model.addRow(new Object[] 
                {
                    rs.getString("id_venda"),
                    rs.getString("valor_venda"),
                    rs.getString("nome_funcionario"),
                    rs.getString("nome_produto"),
                    rs.getString("qtd_venda")
                });
             }
      
            
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(null, e);
        }
        }
    }//GEN-LAST:event_vendaDelButtonActionPerformed

    private void prodVendaListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prodVendaListMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) prodVendaList.getModel();
        int setSelected = prodVendaList.getSelectedRow();
        idProdVendaCad.setText(model.getValueAt(setSelected, 0).toString());
    }//GEN-LAST:event_prodVendaListMouseClicked

    private void qntVendaCadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qntVendaCadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qntVendaCadActionPerformed

    private int x;
    private int y;
    public void initMoving(JFrame frame) {
        header.addMouseListener(new MouseAdapter(){
            @Override
            public void mousePressed(MouseEvent e) {
                x = e.getX();
                y = e.getY();
            }
            
        });
        header.addMouseMotionListener(new MouseMotionAdapter(){
            @Override
            public void mouseDragged(MouseEvent e) {
                frame.setLocation(e.getXOnScreen() - x, e.getYOnScreen() - y);
            }
            
        });
    }
    
    
    public void defaultColor(JPanel panel, JPanel panel1, JPanel panel2, JPanel panel3) {
        panel.setBackground(new Color(248,242,208));
        panel1.setBackground(new Color(248,242,208));
        panel2.setBackground(new Color(248,242,208));
        panel3.setBackground(new Color(248,242,208));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel IngreCadHeader;
    private javax.swing.JLabel IngreHeader;
    private javax.swing.JLabel IngreID;
    private javax.swing.JLabel IngreNome;
    private javax.swing.JScrollPane IngreScroll;
    private javax.swing.JLabel IngreSelect;
    private javax.swing.JButton botaoAddForn;
    private javax.swing.JButton botaoAddFunc;
    private javax.swing.JButton botaoAddIngre;
    private javax.swing.JButton botaoAddProd;
    private javax.swing.JButton botaoDelForn;
    private javax.swing.JButton botaoDelFunc;
    private javax.swing.JButton botaoDelIngre;
    private javax.swing.JButton botaoDelProd;
    private javax.swing.JLabel btnForn;
    private javax.swing.JLabel btnFunc;
    private javax.swing.JLabel btnIngredientes;
    private javax.swing.JLabel btnProd;
    private javax.swing.JLabel btnVendas;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JLabel cadFornLabel;
    private javax.swing.JLabel cadFuncHeader;
    private javax.swing.JLabel cadFuncLabel;
    private javax.swing.JLabel cadIngreLabel;
    private javax.swing.JLabel cadProdLabel;
    private javax.swing.JButton cadastrarCadForn;
    private javax.swing.JButton cadastrarCadFunc;
    private javax.swing.JButton cadastrarCadIngre;
    private javax.swing.JButton cadastrarCadProd;
    private javax.swing.JTextField cargoCadFunc;
    private javax.swing.JLabel cargoLabel;
    private javax.swing.JPanel closeBtn;
    private javax.swing.JFormattedTextField cpfCadFunc;
    private javax.swing.JLabel cpfLabel;
    private javax.swing.JFormattedTextField dataAdmCadFunc;
    private javax.swing.JLabel dataAdmLabel;
    private javax.swing.JTextField emailCadForn;
    private javax.swing.JTextField emailCadFunc;
    private javax.swing.JLabel emailFornLabel;
    private javax.swing.JLabel emailLabelFunc;
    private javax.swing.JRadioButton femButton;
    private javax.swing.JLabel fornCadHeader;
    private javax.swing.JComboBox<String> fornCadIngre;
    private javax.swing.JComboBox<String> fornCadProd;
    private javax.swing.JLabel fornHeader;
    private javax.swing.JLabel fornID;
    private javax.swing.JLabel fornLabel;
    private javax.swing.JLabel fornLabelCadIngre;
    private javax.swing.JLabel fornNome;
    private javax.swing.JScrollPane fornScroll;
    private javax.swing.JLabel fornSelect;
    private javax.swing.JLabel funcHeader;
    private javax.swing.JLabel funcID;
    private javax.swing.JLabel funcNome;
    private javax.swing.JScrollPane funcScroll;
    private javax.swing.JLabel funcSelect;
    private javax.swing.JComboBox<String> funcVendaCad;
    private javax.swing.JLabel funcVendaCadLabel;
    private javax.swing.ButtonGroup genButtons;
    private javax.swing.JPanel header;
    private javax.swing.JTextField idProdVendaCad;
    private javax.swing.JLabel idProdVendaCadLabel;
    private javax.swing.JTextField idadeCadFunc;
    private javax.swing.JLabel idadeLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton limparCadForn;
    private javax.swing.JButton limparCadFunc;
    private javax.swing.JButton limparCadIngre;
    private javax.swing.JButton limparCadProd;
    private javax.swing.JTable listaForn;
    private javax.swing.JTable listaFunc;
    private javax.swing.JTable listaIngre;
    private javax.swing.JTable listaProd;
    private javax.swing.JRadioButton mascButton;
    private javax.swing.JTextField nomeCadForn;
    private javax.swing.JTextField nomeCadFunc;
    private javax.swing.JTextField nomeCadIngre;
    private javax.swing.JTextField nomeCadProd;
    private javax.swing.JLabel nomeLabel;
    private javax.swing.JLabel nomeLabelCadForn;
    private javax.swing.JLabel nomeLabelCadIngre;
    private javax.swing.JLabel nomeLabelProd;
    private javax.swing.JRadioButton outroButton;
    private javax.swing.JLabel padariaHeader;
    private javax.swing.JLabel padariaLogo;
    private javax.swing.JPanel panForn;
    private javax.swing.JPanel panFunc;
    private javax.swing.JPanel panProd;
    private javax.swing.JPanel panRemessa;
    private javax.swing.JPanel panVendas;
    private javax.swing.JButton pesquisaBotaoForn;
    private javax.swing.JButton pesquisaBotaoFunc;
    private javax.swing.JButton pesquisaBotaoIngre;
    private javax.swing.JButton pesquisaBotaoProd;
    private javax.swing.JTextField pesquisaIdForn;
    private javax.swing.JTextField pesquisaIdFunc;
    private javax.swing.JTextField pesquisaIdIngre;
    private javax.swing.JTextField pesquisaIdProd;
    private javax.swing.JTextField pesquisaNomeForn;
    private javax.swing.JTextField pesquisaNomeFunc;
    private javax.swing.JTextField pesquisaNomeIngre;
    private javax.swing.JTextField pesquisaNomeProd;
    private javax.swing.JComboBox<String> pesquisaSelectForn;
    private javax.swing.JComboBox<String> pesquisaSelectFunc;
    private javax.swing.JComboBox<String> pesquisaSelectIngre;
    private javax.swing.JComboBox<String> pesquisaSelectProd;
    private javax.swing.JFormattedTextField precoCadProd;
    private javax.swing.JLabel precoLabelProd;
    private javax.swing.JFormattedTextField precoUniCadIngre;
    private javax.swing.JLabel precoUniLabelCadIngre;
    private javax.swing.JLabel prodCadHeader;
    private javax.swing.JLabel prodHeader;
    private javax.swing.JLabel prodID;
    private javax.swing.JLabel prodNome;
    private javax.swing.JScrollPane prodScroll;
    private javax.swing.JLabel prodSelect;
    private javax.swing.JTable prodVendaList;
    private javax.swing.JScrollPane prodVendaScroll;
    private javax.swing.JFormattedTextField qntVendaCad;
    private javax.swing.JTextField quantCadIngre;
    private javax.swing.JTextField quantCadProd;
    private javax.swing.JLabel quantLabel;
    private javax.swing.JLabel quantLabelCadIngre;
    private javax.swing.JFormattedTextField salarioCadFunc;
    private javax.swing.JLabel salarioLabel;
    private javax.swing.JLabel sexoLabel;
    private javax.swing.JLabel statusLabelCadForn;
    private javax.swing.JTextField sttsCadForn;
    private javax.swing.JPanel tabForn;
    private javax.swing.JPanel tabFornCad;
    private javax.swing.JPanel tabFunc;
    private javax.swing.JPanel tabFuncCad;
    private javax.swing.JPanel tabIngre;
    private javax.swing.JPanel tabIngreCad;
    private javax.swing.JPanel tabInicio;
    private javax.swing.JPanel tabProd;
    private javax.swing.JPanel tabProdCad;
    private javax.swing.JPanel tabVenda;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTextField telCadForn;
    private javax.swing.JTextField telCadFunc;
    private javax.swing.JLabel telFornLabel;
    private javax.swing.JLabel telLabelFunc;
    private javax.swing.JTextField tipoCadForn;
    private javax.swing.JTextField tipoCadProd;
    private javax.swing.JLabel tipoLabelCadForn;
    private javax.swing.JLabel tipoLabelProd;
    private javax.swing.JFormattedTextField valCadIngre;
    private javax.swing.JFormattedTextField valCadProd;
    private javax.swing.JLabel valLabel;
    private javax.swing.JLabel valLabelCadIngre;
    private javax.swing.JLabel valorVendaCadLabel;
    private javax.swing.JLabel vendProdLabel;
    private javax.swing.JButton vendaCadButton;
    private javax.swing.JLabel vendaCadHeader;
    private javax.swing.JButton vendaDelButton;
    private javax.swing.JLabel vendaLabel;
    private javax.swing.JTable vendaList;
    private javax.swing.JScrollPane vendaScroll;
    private javax.swing.JButton voltarCadForn;
    private javax.swing.JButton voltarCadFunc;
    private javax.swing.JButton voltarCadIngre;
    private javax.swing.JButton voltarCadProd;
    // End of variables declaration//GEN-END:variables
}
